Index.PACKAGES = {"io.github.dataunitylab" : [], "io.github.dataunitylab.jsonoid" : [{"name" : "io.github.dataunitylab.jsonoid.BowtieValidator", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/BowtieValidator$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "io.github.dataunitylab.jsonoid.BowtieValidator.main", "link" : "io\/github\/dataunitylab\/jsonoid\/BowtieValidator$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/BowtieValidator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/BowtieValidator$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/BowtieValidator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/BowtieValidator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/BowtieValidator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/BowtieValidator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/BowtieValidator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/BowtieValidator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/BowtieValidator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/BowtieValidator$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/BowtieValidator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/BowtieValidator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/BowtieValidator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/BowtieValidator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/BowtieValidator$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/BowtieValidator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/BowtieValidator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/BowtieValidator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/BowtieValidator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "io.github.dataunitylab.jsonoid.discovery.schemas" : [{"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.AdditionalPropertiesProperty", "shortDescription" : "", "members_case class" : [{"label" : "expandTo", "tail" : "(other: Option[AdditionalPropertiesProperty]): AdditionalPropertiesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.AdditionalPropertiesProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#expandTo(other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.AdditionalPropertiesProperty]):io.github.dataunitylab.jsonoid.discovery.schemas.AdditionalPropertiesProperty", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: AdditionalPropertiesProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.AdditionalPropertiesProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.AdditionalPropertiesProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: Map[String, JsonSchema[_]])(p: JsonoidParams): AdditionalPropertiesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.AdditionalPropertiesProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#mergeValue(value:Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.AdditionalPropertiesProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: AdditionalPropertiesProperty)(p: JsonoidParams): AdditionalPropertiesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.AdditionalPropertiesProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.AdditionalPropertiesProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.AdditionalPropertiesProperty", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(otherProp: AdditionalPropertiesProperty)(p: JsonoidParams): AdditionalPropertiesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.AdditionalPropertiesProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#intersectMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.AdditionalPropertiesProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.AdditionalPropertiesProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.AdditionalPropertiesProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "allowAdditional", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.AdditionalPropertiesProperty.allowAdditional", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#allowAdditional:Boolean", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): AdditionalPropertiesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.AdditionalPropertiesProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.AdditionalPropertiesProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.AdditionalPropertiesProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.AdditionalPropertiesProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.AdditionalPropertiesProperty#<init>", "error" : "unsupported entity"}, {"label" : "overriddenAdditionalProperties", "tail" : ": Option[Boolean]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.AdditionalPropertiesProperty.overriddenAdditionalProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#overriddenAdditionalProperties:Option[Boolean]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[Map[String, JsonSchema[_]]], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AdditionalPropertiesProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.AllOf", "case object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AllOf$.html", "shortDescription" : "", "members_case object" : [{"label" : "toJson", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.AllOf.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AllOf$.html#toJson:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AllOf$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AllOf$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AllOf$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AllOf$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AllOf$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AllOf$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AllOf$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AllOf$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AllOf$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AllOf$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AllOf$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AllOf$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AllOf$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AllOf$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AllOf$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AllOf$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AllOf$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AllOf$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AllOf$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.AnyOf", "case object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnyOf$.html", "shortDescription" : "", "members_case object" : [{"label" : "toJson", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.AnyOf.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnyOf$.html#toJson:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnyOf$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnyOf$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnyOf$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnyOf$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnyOf$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnyOf$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnyOf$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnyOf$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnyOf$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnyOf$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnyOf$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnyOf$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnyOf$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnyOf$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnyOf$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnyOf$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnyOf$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnyOf$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnyOf$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.AnySchema", "shortDescription" : "Represents an empty object in JSON Schema which will accept any value.", "members_case class" : [{"label" : "isSubsetOf", "tail" : "(other: JsonSchema[_], recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.AnySchema.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "copy", "tail" : "(properties: SchemaProperties[Nothing]): AnySchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.AnySchema.copy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#copy(properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Nothing]):io.github.dataunitylab.jsonoid.discovery.schemas.AnySchema", "kind" : "def"}, {"label" : "mergeSameType", "tail" : "(mergeType: MergeType)(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.AnySchema.mergeSameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#mergeSameType(mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "isValidType", "tail" : "(value: S): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.AnySchema.isValidType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#isValidType[S<:org.json4s.JValue](value:S):Boolean", "kind" : "def"}, {"label" : "validTypes", "tail" : ": Set[Class[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.AnySchema.validTypes", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#validTypes:Set[Class[_]]", "kind" : "val"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.AnySchema.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "schemaType", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.AnySchema.schemaType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#schemaType:String", "kind" : "val"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.AnySchema#<init>", "error" : "unsupported entity"}, {"label" : "properties", "tail" : ": SchemaProperties[Nothing]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.AnySchema.properties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Nothing]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "entropy", "tail" : "(p: JsonoidParams): Option[Long]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.entropy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#entropy(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[Long]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[JsonSchema[S]]): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#expandTo[S](other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[S]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "findIncompatibilities", "tail" : "(other: JsonSchema[_], recursive: Boolean): Seq[ClassTag[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findIncompatibilities", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#findIncompatibilities(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean):Seq[scala.reflect.ClassTag[_]]", "kind" : "def"}, {"label" : "onlyPropertiesNamed", "tail" : "(props: Seq[String]): JsonSchema[Nothing]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyPropertiesNamed", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#onlyPropertiesNamed(props:Seq[String]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "onlyProperties", "tail" : "(props: Seq[Class[_]]): JsonSchema[Nothing]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#onlyProperties(props:Seq[Class[_]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "maxAnomalyLevel", "tail" : "(value: S, path: String)(tag: ClassTag[S], p: JsonoidParams): Option[AnomalyLevel]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.maxAnomalyLevel", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#maxAnomalyLevel[S<:org.json4s.JValue](value:S,path:String)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[io.github.dataunitylab.jsonoid.discovery.AnomalyLevel]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String, level: AnomalyLevel)(tag: ClassTag[S], p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String,level:io.github.dataunitylab.jsonoid.discovery.AnomalyLevel)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "replaceWithReference", "tail" : "(pointer: JsonPointer, reference: String, obj: Option[JsonSchema[_]])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithReference", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#replaceWithReference(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,reference:String,obj:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "replaceWithSchema", "tail" : "(pointer: JsonPointer, replaceSchema: JsonSchema[_])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#replaceWithSchema(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,replaceSchema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "findByInexactPointer", "tail" : "(pointer: JsonPointer): Seq[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findByInexactPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#findByInexactPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Seq[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "findByPointer", "tail" : "(pointer: JsonPointer): Option[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findByPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#findByPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "transformPropertiesWithInexactPath", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], transformBase: Boolean, path: String): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformPropertiesWithInexactPath", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#transformPropertiesWithInexactPath(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean,path:String):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "transformProperties", "tail" : "(transformer: PartialFunction[JsonSchema[_], JsonSchema[_]], transformBase: Boolean): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#transformProperties(transformer:PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "copyWithReset", "tail" : "()(p: JsonoidParams): JsonSchema[Nothing]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.copyWithReset", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#copyWithReset()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "merge", "tail" : "(other: JsonSchema[_], mergeType: MergeType)(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.merge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#merge(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isMaxMin", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isMaxMin", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#isMaxMin:Boolean", "kind" : "def"}, {"label" : "createProduct", "tail" : "()(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.createProduct", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#createProduct()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "hasType", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.hasType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#hasType:Boolean", "kind" : "def"}, {"label" : "isNumeric", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isNumeric", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#isNumeric:Boolean", "kind" : "def"}, {"label" : "addDefinition", "tail" : "(definition: JsonSchema[_], name: String): Unit", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.addDefinition", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#addDefinition(definition:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],name:String):Unit", "kind" : "def"}, {"label" : "definitions", "tail" : ": Map[String, JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.definitions", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#definitions:scala.collection.mutable.Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "val"}, {"label" : "toJsonSchema", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJsonSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#toJsonSchema()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/AnySchema.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArrayLengthHistogramProperty", "shortDescription" : "", "members_case class" : [{"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArrayLengthHistogramProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: List[JsonSchema[_]])(p: JsonoidParams): ArrayLengthHistogramProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArrayLengthHistogramProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#mergeValue(value:List[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ArrayLengthHistogramProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: ArrayLengthHistogramProperty)(p: JsonoidParams): ArrayLengthHistogramProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArrayLengthHistogramProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.ArrayLengthHistogramProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ArrayLengthHistogramProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArrayLengthHistogramProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "isInformational", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArrayLengthHistogramProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#isInformational:Boolean", "kind" : "val"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): ArrayLengthHistogramProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArrayLengthHistogramProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ArrayLengthHistogramProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArrayLengthHistogramProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.ArrayLengthHistogramProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArrayLengthHistogramProperty#<init>", "error" : "unsupported entity"}, {"label" : "histogram", "tail" : ": Histogram", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArrayLengthHistogramProperty.histogram", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#histogram:io.github.dataunitylab.jsonoid.discovery.utils.Histogram", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: S, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#isSubsetOf(other:SchemaProperty.this.S,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[List[JsonSchema[_]]], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArrayLengthHistogramProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html", "members_object" : [{"label" : "SimpleProperties", "tail" : ": SchemaProperties[List[JsonSchema[_]]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema.SimpleProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#SimpleProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[List[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]]", "kind" : "lazy val"}, {"label" : "MinProperties", "tail" : ": SchemaProperties[List[JsonSchema[_]]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema.MinProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#MinProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[List[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]]", "kind" : "lazy val"}, {"label" : "AllProperties", "tail" : ": SchemaProperties[List[JsonSchema[_]]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema.AllProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#AllProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[List[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]]", "kind" : "lazy val"}, {"label" : "fromJson", "tail" : "(arr: JObject): ArraySchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema.fromJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#fromJson(arr:org.json4s.JObject):io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema", "kind" : "def"}, {"label" : "tuple", "tail" : "(value: List[JsonSchema[_]])(p: JsonoidParams): ArraySchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema.tuple", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#tuple(value:List[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema", "kind" : "def"}, {"label" : "array", "tail" : "(value: JsonSchema[_])(p: JsonoidParams): ArraySchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema.array", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#array(value:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema", "kind" : "def"}, {"label" : "apply", "tail" : "(value: List[JsonSchema[_]])(p: JsonoidParams): ArraySchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema.apply", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#apply(value:List[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "entropy", "tail" : "(p: JsonoidParams): Option[Long]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema.entropy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#entropy(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[Long]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#toString():String", "kind" : "def"}, {"label" : "replaceWithSchema", "tail" : "(pointer: JsonPointer, replaceSchema: JsonSchema[_])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema.replaceWithSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#replaceWithSchema(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,replaceSchema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "findByInexactPointer", "tail" : "(pointer: JsonPointer): Seq[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema.findByInexactPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#findByInexactPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Seq[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "findByPointer", "tail" : "(pointer: JsonPointer): Option[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema.findByPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#findByPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "copy", "tail" : "(properties: SchemaProperties[List[JsonSchema[_]]]): ArraySchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema.copy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#copy(properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[List[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]]):io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema", "kind" : "def"}, {"label" : "mergeSameType", "tail" : "(mergeType: MergeType)(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema.mergeSameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#mergeSameType(mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "validTypes", "tail" : ": Set[Class[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema.validTypes", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#validTypes:Set[Class[_]]", "kind" : "val"}, {"label" : "schemaType", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema.schemaType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#schemaType:String", "kind" : "val"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema#<init>", "error" : "unsupported entity"}, {"label" : "properties", "tail" : ": SchemaProperties[List[JsonSchema[_]]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ArraySchema.properties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[List[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[JsonSchema[S]]): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#expandTo[S](other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[S]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: JsonSchema[_], recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "findIncompatibilities", "tail" : "(other: JsonSchema[_], recursive: Boolean): Seq[ClassTag[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findIncompatibilities", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#findIncompatibilities(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean):Seq[scala.reflect.ClassTag[_]]", "kind" : "def"}, {"label" : "onlyPropertiesNamed", "tail" : "(props: Seq[String]): JsonSchema[List[JsonSchema[_]]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyPropertiesNamed", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#onlyPropertiesNamed(props:Seq[String]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "onlyProperties", "tail" : "(props: Seq[Class[_]]): JsonSchema[List[JsonSchema[_]]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#onlyProperties(props:Seq[Class[_]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "maxAnomalyLevel", "tail" : "(value: S, path: String)(tag: ClassTag[S], p: JsonoidParams): Option[AnomalyLevel]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.maxAnomalyLevel", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#maxAnomalyLevel[S<:org.json4s.JValue](value:S,path:String)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[io.github.dataunitylab.jsonoid.discovery.AnomalyLevel]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String, level: AnomalyLevel)(tag: ClassTag[S], p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String,level:io.github.dataunitylab.jsonoid.discovery.AnomalyLevel)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "replaceWithReference", "tail" : "(pointer: JsonPointer, reference: String, obj: Option[JsonSchema[_]])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithReference", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#replaceWithReference(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,reference:String,obj:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "transformPropertiesWithInexactPath", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], transformBase: Boolean, path: String): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformPropertiesWithInexactPath", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#transformPropertiesWithInexactPath(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean,path:String):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "transformProperties", "tail" : "(transformer: PartialFunction[JsonSchema[_], JsonSchema[_]], transformBase: Boolean): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#transformProperties(transformer:PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "copyWithReset", "tail" : "()(p: JsonoidParams): JsonSchema[List[JsonSchema[_]]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.copyWithReset", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#copyWithReset()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "merge", "tail" : "(other: JsonSchema[_], mergeType: MergeType)(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.merge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#merge(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isMaxMin", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isMaxMin", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#isMaxMin:Boolean", "kind" : "def"}, {"label" : "createProduct", "tail" : "()(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.createProduct", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#createProduct()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "isValidType", "tail" : "(value: S): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isValidType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#isValidType[S<:org.json4s.JValue](value:S):Boolean", "kind" : "def"}, {"label" : "hasType", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.hasType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#hasType:Boolean", "kind" : "def"}, {"label" : "isNumeric", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isNumeric", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#isNumeric:Boolean", "kind" : "def"}, {"label" : "addDefinition", "tail" : "(definition: JsonSchema[_], name: String): Unit", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.addDefinition", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#addDefinition(definition:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],name:String):Unit", "kind" : "def"}, {"label" : "definitions", "tail" : ": Map[String, JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.definitions", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#definitions:scala.collection.mutable.Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "val"}, {"label" : "toJsonSchema", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJsonSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#toJsonSchema()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ArraySchema.html", "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanConstantProperty", "shortDescription" : "Tracks whether all values are either true or false", "members_case class" : [{"label" : "expandTo", "tail" : "(other: Option[BooleanConstantProperty]): BooleanConstantProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanConstantProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#expandTo(other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.BooleanConstantProperty]):io.github.dataunitylab.jsonoid.discovery.schemas.BooleanConstantProperty", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: BooleanConstantProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanConstantProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.BooleanConstantProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: Boolean)(p: JsonoidParams): BooleanConstantProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanConstantProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#mergeValue(value:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.BooleanConstantProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: BooleanConstantProperty)(p: JsonoidParams): BooleanConstantProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanConstantProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.BooleanConstantProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.BooleanConstantProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanConstantProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "isInformational", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanConstantProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#isInformational:Boolean", "kind" : "val"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): BooleanConstantProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanConstantProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.BooleanConstantProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanConstantProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.BooleanConstantProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanConstantProperty#<init>", "error" : "unsupported entity"}, {"label" : "allFalse", "tail" : ": Option[Boolean]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanConstantProperty.allFalse", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#allFalse:Option[Boolean]", "kind" : "val"}, {"label" : "allTrue", "tail" : ": Option[Boolean]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanConstantProperty.allTrue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#allTrue:Option[Boolean]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[Boolean], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanConstantProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanPercentProperty", "shortDescription" : "Tracks the percentage of true values for a boolean.", "members_case class" : [{"label" : "mergeValue", "tail" : "(value: Boolean)(p: JsonoidParams): BooleanPercentProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanPercentProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#mergeValue(value:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.BooleanPercentProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: BooleanPercentProperty)(p: JsonoidParams): BooleanPercentProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanPercentProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.BooleanPercentProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.BooleanPercentProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanPercentProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "isInformational", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanPercentProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#isInformational:Boolean", "kind" : "val"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): BooleanPercentProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanPercentProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.BooleanPercentProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanPercentProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.BooleanPercentProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanPercentProperty#<init>", "error" : "unsupported entity"}, {"label" : "totalFalse", "tail" : ": BigInt", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanPercentProperty.totalFalse", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#totalFalse:BigInt", "kind" : "val"}, {"label" : "totalTrue", "tail" : ": BigInt", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanPercentProperty.totalTrue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#totalTrue:BigInt", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: S, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#isSubsetOf(other:SchemaProperty.this.S,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[Boolean], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanPercentProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanSchema", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html", "members_object" : [{"label" : "AllProperties", "tail" : ": SchemaProperties[Boolean]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanSchema.AllProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html#AllProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Boolean]", "kind" : "lazy val"}, {"label" : "SimpleProperties", "tail" : ": SchemaProperties[Boolean]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanSchema.SimpleProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html#SimpleProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Boolean]", "kind" : "lazy val"}, {"label" : "MinProperties", "tail" : ": SchemaProperties[Boolean]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanSchema.MinProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html#MinProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Boolean]", "kind" : "lazy val"}, {"label" : "apply", "tail" : "(value: Boolean)(p: JsonoidParams): BooleanSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanSchema.apply", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html#apply(value:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.BooleanSchema", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, t: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanSchema.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicitt:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanSchema.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "copy", "tail" : "(properties: SchemaProperties[Boolean]): BooleanSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanSchema.copy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#copy(properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Boolean]):io.github.dataunitylab.jsonoid.discovery.schemas.BooleanSchema", "kind" : "def"}, {"label" : "mergeSameType", "tail" : "(mergeType: MergeType)(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanSchema.mergeSameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#mergeSameType(mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "validTypes", "tail" : ": Set[Class[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanSchema.validTypes", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#validTypes:Set[Class[_]]", "kind" : "val"}, {"label" : "schemaType", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanSchema.schemaType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#schemaType:String", "kind" : "val"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanSchema#<init>", "error" : "unsupported entity"}, {"label" : "properties", "tail" : ": SchemaProperties[Boolean]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.BooleanSchema.properties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Boolean]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "entropy", "tail" : "(p: JsonoidParams): Option[Long]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.entropy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#entropy(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[Long]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[JsonSchema[S]]): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#expandTo[S](other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[S]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: JsonSchema[_], recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "findIncompatibilities", "tail" : "(other: JsonSchema[_], recursive: Boolean): Seq[ClassTag[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findIncompatibilities", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#findIncompatibilities(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean):Seq[scala.reflect.ClassTag[_]]", "kind" : "def"}, {"label" : "onlyPropertiesNamed", "tail" : "(props: Seq[String]): JsonSchema[Boolean]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyPropertiesNamed", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#onlyPropertiesNamed(props:Seq[String]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "onlyProperties", "tail" : "(props: Seq[Class[_]]): JsonSchema[Boolean]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#onlyProperties(props:Seq[Class[_]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "maxAnomalyLevel", "tail" : "(value: S, path: String)(tag: ClassTag[S], p: JsonoidParams): Option[AnomalyLevel]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.maxAnomalyLevel", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#maxAnomalyLevel[S<:org.json4s.JValue](value:S,path:String)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[io.github.dataunitylab.jsonoid.discovery.AnomalyLevel]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String, level: AnomalyLevel)(tag: ClassTag[S], p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String,level:io.github.dataunitylab.jsonoid.discovery.AnomalyLevel)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "replaceWithReference", "tail" : "(pointer: JsonPointer, reference: String, obj: Option[JsonSchema[_]])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithReference", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#replaceWithReference(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,reference:String,obj:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "replaceWithSchema", "tail" : "(pointer: JsonPointer, replaceSchema: JsonSchema[_])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#replaceWithSchema(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,replaceSchema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "findByInexactPointer", "tail" : "(pointer: JsonPointer): Seq[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findByInexactPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#findByInexactPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Seq[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "findByPointer", "tail" : "(pointer: JsonPointer): Option[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findByPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#findByPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "transformPropertiesWithInexactPath", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], transformBase: Boolean, path: String): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformPropertiesWithInexactPath", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#transformPropertiesWithInexactPath(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean,path:String):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "transformProperties", "tail" : "(transformer: PartialFunction[JsonSchema[_], JsonSchema[_]], transformBase: Boolean): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#transformProperties(transformer:PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "copyWithReset", "tail" : "()(p: JsonoidParams): JsonSchema[Boolean]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.copyWithReset", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#copyWithReset()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "merge", "tail" : "(other: JsonSchema[_], mergeType: MergeType)(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.merge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#merge(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isMaxMin", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isMaxMin", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#isMaxMin:Boolean", "kind" : "def"}, {"label" : "createProduct", "tail" : "()(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.createProduct", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#createProduct()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "isValidType", "tail" : "(value: S): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isValidType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#isValidType[S<:org.json4s.JValue](value:S):Boolean", "kind" : "def"}, {"label" : "hasType", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.hasType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#hasType:Boolean", "kind" : "def"}, {"label" : "isNumeric", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isNumeric", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#isNumeric:Boolean", "kind" : "def"}, {"label" : "addDefinition", "tail" : "(definition: JsonSchema[_], name: String): Unit", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.addDefinition", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#addDefinition(definition:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],name:String):Unit", "kind" : "def"}, {"label" : "definitions", "tail" : ": Map[String, JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.definitions", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#definitions:scala.collection.mutable.Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "val"}, {"label" : "toJsonSchema", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJsonSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#toJsonSchema()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/BooleanSchema.html", "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty$.html", "members_object" : [{"label" : "MaxProperties", "tail" : ": Int", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty.MaxProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty$.html#MaxProperties:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "expandTo", "tail" : "(other: Option[DependenciesProperty]): DependenciesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#expandTo(other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty]):io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: DependenciesProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: Map[String, JsonSchema[_]])(p: JsonoidParams): DependenciesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#mergeValue(value:Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: DependenciesProperty)(p: JsonoidParams): DependenciesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty", "kind" : "def"}, {"label" : "dependencyMap", "tail" : "(includeEverywhere: Boolean): Map[String, Set[String]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty.dependencyMap", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#dependencyMap(includeEverywhere:Boolean):Map[String,Set[String]]", "kind" : "def"}, {"label" : "disjointSets", "tail" : "(): Seq[Set[String]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty.disjointSets", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#disjointSets:Seq[Set[String]]", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "onlyKeys", "tail" : "(keys: Set[String]): DependenciesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty.onlyKeys", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#onlyKeys(keys:Set[String]):io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): DependenciesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty#<init>", "error" : "unsupported entity"}, {"label" : "overloaded", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty.overloaded", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#overloaded:Boolean", "kind" : "val"}, {"label" : "cooccurrence", "tail" : ": Map[(String, String), BigInt]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty.cooccurrence", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#cooccurrence:Map[(String,String),BigInt]", "kind" : "val"}, {"label" : "counts", "tail" : ": Map[String, BigInt]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty.counts", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#counts:Map[String,BigInt]", "kind" : "val"}, {"label" : "totalCount", "tail" : ": BigInt", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DependenciesProperty.totalCount", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#totalCount:BigInt", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[Map[String, JsonSchema[_]]], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DependenciesProperty.html", "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectSchema", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema$.html", "members_object" : [{"label" : "AllProperties", "tail" : ": SchemaProperties[Map[String, JsonSchema[_]]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectSchema.AllProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema$.html#AllProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]]", "kind" : "val"}, {"label" : "apply", "tail" : "(value: JsonSchema[_])(p: JsonoidParams): DynamicObjectSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectSchema.apply", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema$.html#apply(value:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectSchema", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "replaceWithSchema", "tail" : "(pointer: JsonPointer, replaceSchema: JsonSchema[_])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectSchema.replaceWithSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#replaceWithSchema(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,replaceSchema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "findByInexactPointer", "tail" : "(pointer: JsonPointer): Seq[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectSchema.findByInexactPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#findByInexactPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Seq[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "findByPointer", "tail" : "(pointer: JsonPointer): Option[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectSchema.findByPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#findByPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "copy", "tail" : "(properties: SchemaProperties[Map[String, JsonSchema[_]]]): DynamicObjectSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectSchema.copy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#copy(properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]]):io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectSchema", "kind" : "def"}, {"label" : "mergeSameType", "tail" : "(mergeType: MergeType)(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectSchema.mergeSameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#mergeSameType(mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "validTypes", "tail" : ": Set[Class[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectSchema.validTypes", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#validTypes:Set[Class[_]]", "kind" : "val"}, {"label" : "schemaType", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectSchema.schemaType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#schemaType:String", "kind" : "val"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectSchema#<init>", "error" : "unsupported entity"}, {"label" : "properties", "tail" : ": SchemaProperties[Map[String, JsonSchema[_]]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectSchema.properties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "entropy", "tail" : "(p: JsonoidParams): Option[Long]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.entropy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#entropy(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[Long]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[JsonSchema[S]]): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#expandTo[S](other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[S]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: JsonSchema[_], recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "findIncompatibilities", "tail" : "(other: JsonSchema[_], recursive: Boolean): Seq[ClassTag[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findIncompatibilities", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#findIncompatibilities(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean):Seq[scala.reflect.ClassTag[_]]", "kind" : "def"}, {"label" : "onlyPropertiesNamed", "tail" : "(props: Seq[String]): JsonSchema[Map[String, JsonSchema[_]]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyPropertiesNamed", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#onlyPropertiesNamed(props:Seq[String]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "onlyProperties", "tail" : "(props: Seq[Class[_]]): JsonSchema[Map[String, JsonSchema[_]]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#onlyProperties(props:Seq[Class[_]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "maxAnomalyLevel", "tail" : "(value: S, path: String)(tag: ClassTag[S], p: JsonoidParams): Option[AnomalyLevel]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.maxAnomalyLevel", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#maxAnomalyLevel[S<:org.json4s.JValue](value:S,path:String)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[io.github.dataunitylab.jsonoid.discovery.AnomalyLevel]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String, level: AnomalyLevel)(tag: ClassTag[S], p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String,level:io.github.dataunitylab.jsonoid.discovery.AnomalyLevel)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "replaceWithReference", "tail" : "(pointer: JsonPointer, reference: String, obj: Option[JsonSchema[_]])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithReference", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#replaceWithReference(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,reference:String,obj:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "transformPropertiesWithInexactPath", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], transformBase: Boolean, path: String): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformPropertiesWithInexactPath", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#transformPropertiesWithInexactPath(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean,path:String):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "transformProperties", "tail" : "(transformer: PartialFunction[JsonSchema[_], JsonSchema[_]], transformBase: Boolean): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#transformProperties(transformer:PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "copyWithReset", "tail" : "()(p: JsonoidParams): JsonSchema[Map[String, JsonSchema[_]]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.copyWithReset", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#copyWithReset()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "merge", "tail" : "(other: JsonSchema[_], mergeType: MergeType)(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.merge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#merge(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isMaxMin", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isMaxMin", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#isMaxMin:Boolean", "kind" : "def"}, {"label" : "createProduct", "tail" : "()(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.createProduct", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#createProduct()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "isValidType", "tail" : "(value: S): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isValidType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#isValidType[S<:org.json4s.JValue](value:S):Boolean", "kind" : "def"}, {"label" : "hasType", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.hasType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#hasType:Boolean", "kind" : "def"}, {"label" : "isNumeric", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isNumeric", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#isNumeric:Boolean", "kind" : "def"}, {"label" : "addDefinition", "tail" : "(definition: JsonSchema[_], name: String): Unit", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.addDefinition", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#addDefinition(definition:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],name:String):Unit", "kind" : "def"}, {"label" : "definitions", "tail" : ": Map[String, JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.definitions", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#definitions:scala.collection.mutable.Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "val"}, {"label" : "toJsonSchema", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJsonSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#toJsonSchema()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectSchema.html", "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty", "shortDescription" : "The type of the values in a dynamic object schema.", "members_case class" : [{"label" : "expandTo", "tail" : "(other: Option[DynamicObjectTypeProperty]): DynamicObjectTypeProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#expandTo(other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty]):io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: DynamicObjectTypeProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: JsonSchema[_], mergeType: MergeType)(p: JsonoidParams): DynamicObjectTypeProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#mergeValue(value:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: Map[String, JsonSchema[_]])(p: JsonoidParams): DynamicObjectTypeProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#mergeValue(value:Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: DynamicObjectTypeProperty)(p: JsonoidParams): DynamicObjectTypeProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(otherProp: DynamicObjectTypeProperty)(p: JsonoidParams): DynamicObjectTypeProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#intersectMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): DynamicObjectTypeProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): DynamicObjectTypeProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty#<init>", "error" : "unsupported entity"}, {"label" : "valueType", "tail" : ": JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectTypeProperty.valueType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#valueType:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[Map[String, JsonSchema[_]]], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/DynamicObjectTypeProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumSchema", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html", "members_object" : [{"label" : "AllProperties", "tail" : ": SchemaProperties[Set[JValue]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumSchema.AllProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html#AllProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Set[org.json4s.JValue]]", "kind" : "val"}, {"label" : "MinProperties", "tail" : ": SchemaProperties[Set[JValue]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumSchema.MinProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html#MinProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Set[org.json4s.JValue]]", "kind" : "val"}, {"label" : "apply", "tail" : "(value: Set[JValue])(p: JsonoidParams): EnumSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumSchema.apply", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html#apply(value:Set[org.json4s.JValue])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.EnumSchema", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "copy", "tail" : "(properties: SchemaProperties[Set[JValue]]): EnumSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumSchema.copy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#copy(properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Set[org.json4s.JValue]]):io.github.dataunitylab.jsonoid.discovery.schemas.EnumSchema", "kind" : "def"}, {"label" : "mergeSameType", "tail" : "(mergeType: MergeType)(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumSchema.mergeSameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#mergeSameType(mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "isValidType", "tail" : "(value: S): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumSchema.isValidType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#isValidType[S<:org.json4s.JValue](value:S):Boolean", "kind" : "def"}, {"label" : "validTypes", "tail" : ": Set[Class[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumSchema.validTypes", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#validTypes:Set[Class[_]]", "kind" : "val"}, {"label" : "schemaType", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumSchema.schemaType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#schemaType:String", "kind" : "val"}, {"label" : "hasType", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumSchema.hasType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#hasType:Boolean", "kind" : "def"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumSchema#<init>", "error" : "unsupported entity"}, {"label" : "properties", "tail" : ": SchemaProperties[Set[JValue]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumSchema.properties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Set[org.json4s.JValue]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "entropy", "tail" : "(p: JsonoidParams): Option[Long]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.entropy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#entropy(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[Long]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[JsonSchema[S]]): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#expandTo[S](other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[S]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: JsonSchema[_], recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "findIncompatibilities", "tail" : "(other: JsonSchema[_], recursive: Boolean): Seq[ClassTag[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findIncompatibilities", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#findIncompatibilities(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean):Seq[scala.reflect.ClassTag[_]]", "kind" : "def"}, {"label" : "onlyPropertiesNamed", "tail" : "(props: Seq[String]): JsonSchema[Set[JValue]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyPropertiesNamed", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#onlyPropertiesNamed(props:Seq[String]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "onlyProperties", "tail" : "(props: Seq[Class[_]]): JsonSchema[Set[JValue]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#onlyProperties(props:Seq[Class[_]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "maxAnomalyLevel", "tail" : "(value: S, path: String)(tag: ClassTag[S], p: JsonoidParams): Option[AnomalyLevel]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.maxAnomalyLevel", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#maxAnomalyLevel[S<:org.json4s.JValue](value:S,path:String)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[io.github.dataunitylab.jsonoid.discovery.AnomalyLevel]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String, level: AnomalyLevel)(tag: ClassTag[S], p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String,level:io.github.dataunitylab.jsonoid.discovery.AnomalyLevel)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "replaceWithReference", "tail" : "(pointer: JsonPointer, reference: String, obj: Option[JsonSchema[_]])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithReference", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#replaceWithReference(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,reference:String,obj:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "replaceWithSchema", "tail" : "(pointer: JsonPointer, replaceSchema: JsonSchema[_])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#replaceWithSchema(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,replaceSchema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "findByInexactPointer", "tail" : "(pointer: JsonPointer): Seq[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findByInexactPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#findByInexactPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Seq[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "findByPointer", "tail" : "(pointer: JsonPointer): Option[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findByPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#findByPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "transformPropertiesWithInexactPath", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], transformBase: Boolean, path: String): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformPropertiesWithInexactPath", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#transformPropertiesWithInexactPath(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean,path:String):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "transformProperties", "tail" : "(transformer: PartialFunction[JsonSchema[_], JsonSchema[_]], transformBase: Boolean): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#transformProperties(transformer:PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "copyWithReset", "tail" : "()(p: JsonoidParams): JsonSchema[Set[JValue]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.copyWithReset", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#copyWithReset()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "merge", "tail" : "(other: JsonSchema[_], mergeType: MergeType)(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.merge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#merge(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isMaxMin", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isMaxMin", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#isMaxMin:Boolean", "kind" : "def"}, {"label" : "createProduct", "tail" : "()(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.createProduct", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#createProduct()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "isNumeric", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isNumeric", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#isNumeric:Boolean", "kind" : "def"}, {"label" : "addDefinition", "tail" : "(definition: JsonSchema[_], name: String): Unit", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.addDefinition", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#addDefinition(definition:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],name:String):Unit", "kind" : "def"}, {"label" : "definitions", "tail" : ": Map[String, JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.definitions", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#definitions:scala.collection.mutable.Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "val"}, {"label" : "toJsonSchema", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJsonSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#toJsonSchema()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumSchema.html", "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumValuesProperty", "shortDescription" : "Tracks all possible values of the enum.", "members_case class" : [{"label" : "isSubsetOf", "tail" : "(other: EnumValuesProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumValuesProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.EnumValuesProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumValuesProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: Set[JValue])(p: JsonoidParams): EnumValuesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumValuesProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#mergeValue(value:Set[org.json4s.JValue])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.EnumValuesProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: EnumValuesProperty)(p: JsonoidParams): EnumValuesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumValuesProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.EnumValuesProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.EnumValuesProperty", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(otherProp: EnumValuesProperty)(p: JsonoidParams): EnumValuesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumValuesProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#intersectMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.EnumValuesProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.EnumValuesProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumValuesProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): EnumValuesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumValuesProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.EnumValuesProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumValuesProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.EnumValuesProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumValuesProperty#<init>", "error" : "unsupported entity"}, {"label" : "values", "tail" : ": Set[JValue]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.EnumValuesProperty.values", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#values:Set[org.json4s.JValue]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[Set[JValue]], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/EnumValuesProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.ExamplesProperty", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html", "members_object" : [{"label" : "sampleValue", "tail" : "(value: T): T", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ExamplesProperty.sampleValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html#sampleValue[T](value:T):T", "kind" : "def"}, {"label" : "apply", "tail" : "(value: T): ExamplesProperty[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ExamplesProperty.apply", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html#apply[T](value:T):io.github.dataunitylab.jsonoid.discovery.schemas.ExamplesProperty[T]", "kind" : "def"}, {"label" : "MaxStringLength", "tail" : ": Int", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ExamplesProperty.MaxStringLength", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html#MaxStringLength:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "merge", "tail" : "(other: ExamplesProperty[T])(p: JsonoidParams): ExamplesProperty[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ExamplesProperty.merge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html#merge(other:io.github.dataunitylab.jsonoid.discovery.schemas.ExamplesProperty[T])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ExamplesProperty[T]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: T)(p: JsonoidParams): ExamplesProperty[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ExamplesProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html#mergeValue(value:T)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ExamplesProperty[T]", "kind" : "def"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ExamplesProperty#<init>", "error" : "unsupported entity"}, {"label" : "sampleW", "tail" : ": Double", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ExamplesProperty.sampleW", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html#sampleW:Double", "kind" : "val"}, {"label" : "nextSample", "tail" : ": BigInt", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ExamplesProperty.nextSample", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html#nextSample:BigInt", "kind" : "val"}, {"label" : "totalExamples", "tail" : ": BigInt", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ExamplesProperty.totalExamples", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html#totalExamples:BigInt", "kind" : "val"}, {"label" : "examples", "tail" : ": List[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ExamplesProperty.examples", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html#examples:List[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ExamplesProperty.html", "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.FieldPresenceProperty", "shortDescription" : "Tracks what percentage of the time keys in an object schema are present.", "members_case class" : [{"label" : "mergeValue", "tail" : "(value: Map[String, JsonSchema[_]])(p: JsonoidParams): FieldPresenceProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FieldPresenceProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#mergeValue(value:Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.FieldPresenceProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: FieldPresenceProperty)(p: JsonoidParams): FieldPresenceProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FieldPresenceProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.FieldPresenceProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.FieldPresenceProperty", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(otherProp: FieldPresenceProperty)(p: JsonoidParams): FieldPresenceProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FieldPresenceProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#intersectMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.FieldPresenceProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.FieldPresenceProperty", "kind" : "def"}, {"label" : "onlyKeys", "tail" : "(keys: Set[String]): FieldPresenceProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FieldPresenceProperty.onlyKeys", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#onlyKeys(keys:Set[String]):io.github.dataunitylab.jsonoid.discovery.schemas.FieldPresenceProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FieldPresenceProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "isInformational", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FieldPresenceProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#isInformational:Boolean", "kind" : "val"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): FieldPresenceProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FieldPresenceProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.FieldPresenceProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FieldPresenceProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.FieldPresenceProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FieldPresenceProperty#<init>", "error" : "unsupported entity"}, {"label" : "totalCount", "tail" : ": BigInt", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FieldPresenceProperty.totalCount", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#totalCount:BigInt", "kind" : "val"}, {"label" : "fieldPresence", "tail" : ": Map[String, BigInt]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FieldPresenceProperty.fieldPresence", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#fieldPresence:Map[String,BigInt]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: S, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#isSubsetOf(other:SchemaProperty.this.S,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[Map[String, JsonSchema[_]]], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FieldPresenceProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html", "members_object" : [{"label" : "ExtendedFormatCheckers", "tail" : ": Map[String, (String) => Boolean]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty.ExtendedFormatCheckers", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html#ExtendedFormatCheckers:Map[String,String=>Boolean]", "kind" : "val"}, {"label" : "FormatCheckers", "tail" : ": Map[String, (String) => Boolean]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty.FormatCheckers", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html#FormatCheckers:Map[String,String=>Boolean]", "kind" : "val"}, {"label" : "MinExamples", "tail" : ": Int", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty.MinExamples", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html#MinExamples:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "expandTo", "tail" : "(other: Option[FormatProperty]): FormatProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#expandTo(other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty]):io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: FormatProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: String)(p: JsonoidParams): FormatProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#mergeValue(value:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: FormatProperty)(p: JsonoidParams): FormatProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(otherProp: FormatProperty)(p: JsonoidParams): FormatProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#intersectMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "maxFormat", "tail" : "(useLimit: Boolean)(p: JsonoidParams): Option[String]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty.maxFormat", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#maxFormat(useLimit:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[String]", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): FormatProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty#<init>", "error" : "unsupported entity"}, {"label" : "formats", "tail" : ": Map[String, BigInt]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.FormatProperty.formats", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#formats:Map[String,BigInt]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[String], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/FormatProperty.html", "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntBloomFilterProperty", "shortDescription" : "Tracks possible integers which can be contained in the set", "members_case class" : [{"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntBloomFilterProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: BigInt)(p: JsonoidParams): IntBloomFilterProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntBloomFilterProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#mergeValue(value:BigInt)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.IntBloomFilterProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: IntBloomFilterProperty)(p: JsonoidParams): IntBloomFilterProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntBloomFilterProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.IntBloomFilterProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.IntBloomFilterProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntBloomFilterProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "isInformational", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntBloomFilterProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#isInformational:Boolean", "kind" : "val"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): IntBloomFilterProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntBloomFilterProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.IntBloomFilterProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntBloomFilterProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.IntBloomFilterProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntBloomFilterProperty#<init>", "error" : "unsupported entity"}, {"label" : "bloomFilter", "tail" : ": BloomFilter[Integer]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntBloomFilterProperty.bloomFilter", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#bloomFilter:io.github.dataunitylab.jsonoid.discovery.utils.BloomFilter[Integer]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: S, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#isSubsetOf(other:SchemaProperty.this.S,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[BigInt], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntBloomFilterProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntegerSchema", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html", "members_object" : [{"label" : "SimpleProperties", "tail" : ": SchemaProperties[BigInt]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntegerSchema.SimpleProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#SimpleProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[BigInt]", "kind" : "lazy val"}, {"label" : "MinProperties", "tail" : ": SchemaProperties[BigInt]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntegerSchema.MinProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#MinProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[BigInt]", "kind" : "lazy val"}, {"label" : "AllProperties", "tail" : ": SchemaProperties[BigInt]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntegerSchema.AllProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#AllProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[BigInt]", "kind" : "lazy val"}, {"label" : "fromJson", "tail" : "(int: JObject): IntegerSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntegerSchema.fromJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#fromJson(int:org.json4s.JObject):io.github.dataunitylab.jsonoid.discovery.schemas.IntegerSchema", "kind" : "def"}, {"label" : "apply", "tail" : "(value: BigInt)(p: JsonoidParams): IntegerSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntegerSchema.apply", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#apply(value:BigInt)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.IntegerSchema", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "isSubsetOf", "tail" : "(other: JsonSchema[_], recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntegerSchema.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "asNumberSchema", "tail" : "(): NumberSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntegerSchema.asNumberSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#asNumberSchema:io.github.dataunitylab.jsonoid.discovery.schemas.NumberSchema", "kind" : "def"}, {"label" : "copy", "tail" : "(properties: SchemaProperties[BigInt]): IntegerSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntegerSchema.copy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#copy(properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[BigInt]):io.github.dataunitylab.jsonoid.discovery.schemas.IntegerSchema", "kind" : "def"}, {"label" : "mergeSameType", "tail" : "(mergeType: MergeType)(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntegerSchema.mergeSameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#mergeSameType(mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "validTypes", "tail" : ": Set[Class[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntegerSchema.validTypes", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#validTypes:Set[Class[_]]", "kind" : "val"}, {"label" : "isNumeric", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntegerSchema.isNumeric", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#isNumeric:Boolean", "kind" : "val"}, {"label" : "schemaType", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntegerSchema.schemaType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#schemaType:String", "kind" : "val"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntegerSchema#<init>", "error" : "unsupported entity"}, {"label" : "properties", "tail" : ": SchemaProperties[BigInt]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntegerSchema.properties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[BigInt]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "entropy", "tail" : "(p: JsonoidParams): Option[Long]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.entropy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#entropy(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[Long]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[JsonSchema[S]]): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#expandTo[S](other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[S]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "findIncompatibilities", "tail" : "(other: JsonSchema[_], recursive: Boolean): Seq[ClassTag[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findIncompatibilities", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#findIncompatibilities(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean):Seq[scala.reflect.ClassTag[_]]", "kind" : "def"}, {"label" : "onlyPropertiesNamed", "tail" : "(props: Seq[String]): JsonSchema[BigInt]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyPropertiesNamed", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#onlyPropertiesNamed(props:Seq[String]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "onlyProperties", "tail" : "(props: Seq[Class[_]]): JsonSchema[BigInt]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#onlyProperties(props:Seq[Class[_]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "maxAnomalyLevel", "tail" : "(value: S, path: String)(tag: ClassTag[S], p: JsonoidParams): Option[AnomalyLevel]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.maxAnomalyLevel", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#maxAnomalyLevel[S<:org.json4s.JValue](value:S,path:String)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[io.github.dataunitylab.jsonoid.discovery.AnomalyLevel]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String, level: AnomalyLevel)(tag: ClassTag[S], p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String,level:io.github.dataunitylab.jsonoid.discovery.AnomalyLevel)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "replaceWithReference", "tail" : "(pointer: JsonPointer, reference: String, obj: Option[JsonSchema[_]])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithReference", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#replaceWithReference(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,reference:String,obj:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "replaceWithSchema", "tail" : "(pointer: JsonPointer, replaceSchema: JsonSchema[_])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#replaceWithSchema(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,replaceSchema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "findByInexactPointer", "tail" : "(pointer: JsonPointer): Seq[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findByInexactPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#findByInexactPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Seq[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "findByPointer", "tail" : "(pointer: JsonPointer): Option[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findByPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#findByPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "transformPropertiesWithInexactPath", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], transformBase: Boolean, path: String): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformPropertiesWithInexactPath", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#transformPropertiesWithInexactPath(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean,path:String):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "transformProperties", "tail" : "(transformer: PartialFunction[JsonSchema[_], JsonSchema[_]], transformBase: Boolean): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#transformProperties(transformer:PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "copyWithReset", "tail" : "()(p: JsonoidParams): JsonSchema[BigInt]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.copyWithReset", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#copyWithReset()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "merge", "tail" : "(other: JsonSchema[_], mergeType: MergeType)(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.merge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#merge(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isMaxMin", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isMaxMin", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#isMaxMin:Boolean", "kind" : "def"}, {"label" : "createProduct", "tail" : "()(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.createProduct", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#createProduct()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "isValidType", "tail" : "(value: S): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isValidType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#isValidType[S<:org.json4s.JValue](value:S):Boolean", "kind" : "def"}, {"label" : "hasType", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.hasType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#hasType:Boolean", "kind" : "def"}, {"label" : "addDefinition", "tail" : "(definition: JsonSchema[_], name: String): Unit", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.addDefinition", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#addDefinition(definition:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],name:String):Unit", "kind" : "def"}, {"label" : "definitions", "tail" : ": Map[String, JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.definitions", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#definitions:scala.collection.mutable.Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "val"}, {"label" : "toJsonSchema", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJsonSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#toJsonSchema()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntegerSchema.html", "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntExamplesProperty", "shortDescription" : "Tracks examples observed for these integers.", "members_case class" : [{"label" : "mergeValue", "tail" : "(value: BigInt)(p: JsonoidParams): IntExamplesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntExamplesProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#mergeValue(value:BigInt)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.IntExamplesProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: IntExamplesProperty)(p: JsonoidParams): IntExamplesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntExamplesProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.IntExamplesProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.IntExamplesProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntExamplesProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "isInformational", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntExamplesProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#isInformational:Boolean", "kind" : "val"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): IntExamplesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntExamplesProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.IntExamplesProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntExamplesProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.IntExamplesProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntExamplesProperty#<init>", "error" : "unsupported entity"}, {"label" : "examples", "tail" : ": ExamplesProperty[BigInt]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntExamplesProperty.examples", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#examples:io.github.dataunitylab.jsonoid.discovery.schemas.ExamplesProperty[BigInt]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: S, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#isSubsetOf(other:SchemaProperty.this.S,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[BigInt], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntExamplesProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntHistogramProperty", "shortDescription" : "Tracks a histogram of integer values.", "members_case class" : [{"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntHistogramProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: BigInt)(p: JsonoidParams): IntHistogramProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntHistogramProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#mergeValue(value:BigInt)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.IntHistogramProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: IntHistogramProperty)(p: JsonoidParams): IntHistogramProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntHistogramProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.IntHistogramProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.IntHistogramProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntHistogramProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "isInformational", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntHistogramProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#isInformational:Boolean", "kind" : "val"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): IntHistogramProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntHistogramProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.IntHistogramProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntHistogramProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.IntHistogramProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntHistogramProperty#<init>", "error" : "unsupported entity"}, {"label" : "histogram", "tail" : ": Histogram", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntHistogramProperty.histogram", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#histogram:io.github.dataunitylab.jsonoid.discovery.utils.Histogram", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: S, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#isSubsetOf(other:SchemaProperty.this.S,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[BigInt], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHistogramProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntHyperLogLogProperty", "shortDescription" : "Tracks the estimated cardinality of the set of integer values.", "members_case class" : [{"label" : "mergeValue", "tail" : "(value: BigInt)(p: JsonoidParams): IntHyperLogLogProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntHyperLogLogProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#mergeValue(value:BigInt)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.IntHyperLogLogProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: IntHyperLogLogProperty)(p: JsonoidParams): IntHyperLogLogProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntHyperLogLogProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.IntHyperLogLogProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.IntHyperLogLogProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntHyperLogLogProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "isInformational", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntHyperLogLogProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#isInformational:Boolean", "kind" : "val"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): IntHyperLogLogProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntHyperLogLogProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.IntHyperLogLogProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntHyperLogLogProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.IntHyperLogLogProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntHyperLogLogProperty#<init>", "error" : "unsupported entity"}, {"label" : "hll", "tail" : ": HyperLogLog", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntHyperLogLogProperty.hll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#hll:io.github.dataunitylab.jsonoid.discovery.utils.HyperLogLog", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: S, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#isSubsetOf(other:SchemaProperty.this.S,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[BigInt], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntHyperLogLogProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntMultipleOfProperty", "shortDescription" : "Tracks a common multiple of these integers.", "members_case class" : [{"label" : "expandTo", "tail" : "(other: Option[IntMultipleOfProperty]): IntMultipleOfProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntMultipleOfProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#expandTo(other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.IntMultipleOfProperty]):io.github.dataunitylab.jsonoid.discovery.schemas.IntMultipleOfProperty", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: IntMultipleOfProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntMultipleOfProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.IntMultipleOfProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: BigInt)(p: JsonoidParams): IntMultipleOfProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntMultipleOfProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#mergeValue(value:BigInt)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.IntMultipleOfProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: IntMultipleOfProperty)(p: JsonoidParams): IntMultipleOfProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntMultipleOfProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.IntMultipleOfProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.IntMultipleOfProperty", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(otherProp: IntMultipleOfProperty)(p: JsonoidParams): IntMultipleOfProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntMultipleOfProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#intersectMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.IntMultipleOfProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.IntMultipleOfProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntMultipleOfProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): IntMultipleOfProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntMultipleOfProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.IntMultipleOfProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntMultipleOfProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.IntMultipleOfProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntMultipleOfProperty#<init>", "error" : "unsupported entity"}, {"label" : "multiple", "tail" : ": Option[BigInt]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntMultipleOfProperty.multiple", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#multiple:Option[BigInt]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[BigInt], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntMultipleOfProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntStatsProperty", "shortDescription" : "Tracks statistics on the integers in this set", "members_case class" : [{"label" : "mergeValue", "tail" : "(value: BigInt)(p: JsonoidParams): IntStatsProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntStatsProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#mergeValue(value:BigInt)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.IntStatsProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: IntStatsProperty)(p: JsonoidParams): IntStatsProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntStatsProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.IntStatsProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.IntStatsProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntStatsProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "isInformational", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntStatsProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#isInformational:Boolean", "kind" : "val"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): IntStatsProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntStatsProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.IntStatsProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntStatsProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.IntStatsProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntStatsProperty#<init>", "error" : "unsupported entity"}, {"label" : "stats", "tail" : ": StatsProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.IntStatsProperty.stats", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#stats:io.github.dataunitylab.jsonoid.discovery.schemas.StatsProperty", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: S, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#isSubsetOf(other:SchemaProperty.this.S,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[BigInt], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/IntStatsProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty", "shortDescription" : "The type of item stored in this array schema.", "members_case class" : [{"label" : "expandTo", "tail" : "(other: Option[ItemTypeProperty]): ItemTypeProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#expandTo(other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty]):io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: ItemTypeProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: List[JsonSchema[_]])(p: JsonoidParams): ItemTypeProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#mergeValue(value:List[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty", "kind" : "def"}, {"label" : "merge", "tail" : "(otherProp: ItemTypeProperty, mergeType: MergeType)(p: JsonoidParams): ItemTypeProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty.merge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#merge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty,mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: ItemTypeProperty)(p: JsonoidParams): ItemTypeProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(otherProp: ItemTypeProperty)(p: JsonoidParams): ItemTypeProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#intersectMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): ItemTypeProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): ItemTypeProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty#<init>", "error" : "unsupported entity"}, {"label" : "count", "tail" : ": Int", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty.count", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#count:Int", "kind" : "val"}, {"label" : "itemType", "tail" : ": Either[JsonSchema[_], List[JsonSchema[_]]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ItemTypeProperty.itemType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#itemType:Either[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],List[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[List[JsonSchema[_]]], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ItemTypeProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema$.html", "members_object" : [{"label" : "fromJson", "tail" : "(schema: JValue): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.fromJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema$.html#fromJson(schema:org.json4s.JValue):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "formats", "tail" : ": Formats", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.formats", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema$.html#formats:org.json4s.Formats", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html", "kind" : "object", "members_trait" : [{"label" : "entropy", "tail" : "(p: JsonoidParams): Option[Long]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.entropy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#entropy(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[Long]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[JsonSchema[S]]): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#expandTo[S](other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[S]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: JsonSchema[_], recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "findIncompatibilities", "tail" : "(other: JsonSchema[_], recursive: Boolean): Seq[ClassTag[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findIncompatibilities", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#findIncompatibilities(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean):Seq[scala.reflect.ClassTag[_]]", "kind" : "def"}, {"label" : "onlyPropertiesNamed", "tail" : "(props: Seq[String]): JsonSchema[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyPropertiesNamed", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#onlyPropertiesNamed(props:Seq[String]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "onlyProperties", "tail" : "(props: Seq[Class[_]]): JsonSchema[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#onlyProperties(props:Seq[Class[_]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "maxAnomalyLevel", "tail" : "(value: S, path: String)(tag: ClassTag[S], p: JsonoidParams): Option[AnomalyLevel]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.maxAnomalyLevel", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#maxAnomalyLevel[S<:org.json4s.JValue](value:S,path:String)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[io.github.dataunitylab.jsonoid.discovery.AnomalyLevel]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String, level: AnomalyLevel)(tag: ClassTag[S], p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String,level:io.github.dataunitylab.jsonoid.discovery.AnomalyLevel)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "replaceWithReference", "tail" : "(pointer: JsonPointer, reference: String, obj: Option[JsonSchema[_]])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithReference", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#replaceWithReference(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,reference:String,obj:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "replaceWithSchema", "tail" : "(pointer: JsonPointer, replaceSchema: JsonSchema[_])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#replaceWithSchema(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,replaceSchema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "findByInexactPointer", "tail" : "(pointer: JsonPointer): Seq[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findByInexactPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#findByInexactPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Seq[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "findByPointer", "tail" : "(pointer: JsonPointer): Option[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findByPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#findByPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "transformPropertiesWithInexactPath", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], transformBase: Boolean, path: String): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformPropertiesWithInexactPath", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#transformPropertiesWithInexactPath(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean,path:String):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "transformProperties", "tail" : "(transformer: PartialFunction[JsonSchema[_], JsonSchema[_]], transformBase: Boolean): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#transformProperties(transformer:PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "copyWithReset", "tail" : "()(p: JsonoidParams): JsonSchema[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.copyWithReset", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#copyWithReset()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "merge", "tail" : "(other: JsonSchema[_], mergeType: MergeType)(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.merge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#merge(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isMaxMin", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isMaxMin", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#isMaxMin:Boolean", "kind" : "def"}, {"label" : "createProduct", "tail" : "()(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.createProduct", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#createProduct()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "isValidType", "tail" : "(value: S): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isValidType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#isValidType[S<:org.json4s.JValue](value:S):Boolean", "kind" : "def"}, {"label" : "hasType", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.hasType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#hasType:Boolean", "kind" : "def"}, {"label" : "isNumeric", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isNumeric", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#isNumeric:Boolean", "kind" : "def"}, {"label" : "addDefinition", "tail" : "(definition: JsonSchema[_], name: String): Unit", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.addDefinition", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#addDefinition(definition:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],name:String):Unit", "kind" : "def"}, {"label" : "definitions", "tail" : ": Map[String, JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.definitions", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#definitions:scala.collection.mutable.Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "val"}, {"label" : "toJsonSchema", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJsonSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#toJsonSchema()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "copy", "tail" : "(properties: SchemaProperties[T]): JsonSchema[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.copy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#copy(properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[T]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "abstract def"}, {"label" : "mergeSameType", "tail" : "(mergeType: MergeType)(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.mergeSameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#mergeSameType(mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "abstract def"}, {"label" : "validTypes", "tail" : "(): Set[Class[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.validTypes", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#validTypes:Set[Class[_]]", "kind" : "abstract def"}, {"label" : "schemaType", "tail" : "(): String", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.schemaType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#schemaType:String", "kind" : "abstract def"}, {"label" : "properties", "tail" : "(): SchemaProperties[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.properties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/JsonSchema.html#properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[T]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty", "shortDescription" : "Tracks the maximum value of all integers.", "members_case class" : [{"label" : "expandTo", "tail" : "(other: Option[MaxIntValueProperty]): MaxIntValueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#expandTo(other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty]):io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: MaxIntValueProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: BigInt)(p: JsonoidParams): MaxIntValueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#mergeValue(value:BigInt)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: MaxIntValueProperty)(p: JsonoidParams): MaxIntValueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(otherProp: MaxIntValueProperty)(p: JsonoidParams): MaxIntValueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#intersectMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): MaxIntValueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty#<init>", "error" : "unsupported entity"}, {"label" : "exclusive", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty.exclusive", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#exclusive:Boolean", "kind" : "val"}, {"label" : "maxIntValue", "tail" : ": Option[BigInt]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxIntValueProperty.maxIntValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#maxIntValue:Option[BigInt]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[BigInt], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxIntValueProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxItemsProperty", "shortDescription" : "", "members_case class" : [{"label" : "expandTo", "tail" : "(other: Option[MaxItemsProperty]): MaxItemsProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxItemsProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#expandTo(other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.MaxItemsProperty]):io.github.dataunitylab.jsonoid.discovery.schemas.MaxItemsProperty", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: MaxItemsProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxItemsProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.MaxItemsProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxItemsProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: List[JsonSchema[_]])(p: JsonoidParams): MaxItemsProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxItemsProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#mergeValue(value:List[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MaxItemsProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: MaxItemsProperty)(p: JsonoidParams): MaxItemsProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxItemsProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.MaxItemsProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MaxItemsProperty", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(otherProp: MaxItemsProperty)(p: JsonoidParams): MaxItemsProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxItemsProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#intersectMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.MaxItemsProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MaxItemsProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxItemsProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): MaxItemsProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxItemsProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MaxItemsProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxItemsProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.MaxItemsProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxItemsProperty#<init>", "error" : "unsupported entity"}, {"label" : "maxItems", "tail" : ": Option[Int]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxItemsProperty.maxItems", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#maxItems:Option[Int]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[List[JsonSchema[_]]], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxItemsProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxLengthProperty", "shortDescription" : "Tracks the maximum length of strings.", "members_case class" : [{"label" : "expandTo", "tail" : "(other: Option[MaxLengthProperty]): MaxLengthProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxLengthProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#expandTo(other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.MaxLengthProperty]):io.github.dataunitylab.jsonoid.discovery.schemas.MaxLengthProperty", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: MaxLengthProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxLengthProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.MaxLengthProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxLengthProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: String)(p: JsonoidParams): MaxLengthProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxLengthProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#mergeValue(value:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MaxLengthProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: MaxLengthProperty)(p: JsonoidParams): MaxLengthProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxLengthProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.MaxLengthProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MaxLengthProperty", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(otherProp: MaxLengthProperty)(p: JsonoidParams): MaxLengthProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxLengthProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#intersectMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.MaxLengthProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MaxLengthProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxLengthProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): MaxLengthProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxLengthProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MaxLengthProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxLengthProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.MaxLengthProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxLengthProperty#<init>", "error" : "unsupported entity"}, {"label" : "maxLength", "tail" : ": Option[Int]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxLengthProperty.maxLength", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#maxLength:Option[Int]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[String], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxLengthProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty", "shortDescription" : "Tracks the maximum value of all numbers.", "members_case class" : [{"label" : "expandTo", "tail" : "(other: Option[MaxNumValueProperty]): MaxNumValueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#expandTo(other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty]):io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: MaxNumValueProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: BigDecimal)(p: JsonoidParams): MaxNumValueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#mergeValue(value:BigDecimal)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: MaxNumValueProperty)(p: JsonoidParams): MaxNumValueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(otherProp: MaxNumValueProperty)(p: JsonoidParams): MaxNumValueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#intersectMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): MaxNumValueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty#<init>", "error" : "unsupported entity"}, {"label" : "exclusive", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty.exclusive", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#exclusive:Boolean", "kind" : "val"}, {"label" : "maxNumValue", "tail" : ": Option[BigDecimal]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MaxNumValueProperty.maxNumValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#maxNumValue:Option[BigDecimal]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[BigDecimal], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MaxNumValueProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty", "shortDescription" : "Tracks the minimum value of all integers.", "members_case class" : [{"label" : "expandTo", "tail" : "(other: Option[MinIntValueProperty]): MinIntValueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#expandTo(other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty]):io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: MinIntValueProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: BigInt)(p: JsonoidParams): MinIntValueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#mergeValue(value:BigInt)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: MinIntValueProperty)(p: JsonoidParams): MinIntValueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(otherProp: MinIntValueProperty)(p: JsonoidParams): MinIntValueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#intersectMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): MinIntValueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty#<init>", "error" : "unsupported entity"}, {"label" : "exclusive", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty.exclusive", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#exclusive:Boolean", "kind" : "val"}, {"label" : "minIntValue", "tail" : ": Option[BigInt]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinIntValueProperty.minIntValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#minIntValue:Option[BigInt]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[BigInt], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinIntValueProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinItemsProperty", "shortDescription" : "Tracks the minimum number of items in the array.", "members_case class" : [{"label" : "expandTo", "tail" : "(other: Option[MinItemsProperty]): MinItemsProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinItemsProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#expandTo(other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.MinItemsProperty]):io.github.dataunitylab.jsonoid.discovery.schemas.MinItemsProperty", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: MinItemsProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinItemsProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.MinItemsProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinItemsProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: List[JsonSchema[_]])(p: JsonoidParams): MinItemsProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinItemsProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#mergeValue(value:List[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MinItemsProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: MinItemsProperty)(p: JsonoidParams): MinItemsProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinItemsProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.MinItemsProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MinItemsProperty", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(otherProp: MinItemsProperty)(p: JsonoidParams): MinItemsProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinItemsProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#intersectMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.MinItemsProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MinItemsProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinItemsProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): MinItemsProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinItemsProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MinItemsProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinItemsProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.MinItemsProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinItemsProperty#<init>", "error" : "unsupported entity"}, {"label" : "minItems", "tail" : ": Option[Int]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinItemsProperty.minItems", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#minItems:Option[Int]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[List[JsonSchema[_]]], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinItemsProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinLengthProperty", "shortDescription" : "Tracks the minimum length of strings.", "members_case class" : [{"label" : "expandTo", "tail" : "(other: Option[MinLengthProperty]): MinLengthProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinLengthProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#expandTo(other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.MinLengthProperty]):io.github.dataunitylab.jsonoid.discovery.schemas.MinLengthProperty", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: MinLengthProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinLengthProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.MinLengthProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinLengthProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: String)(p: JsonoidParams): MinLengthProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinLengthProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#mergeValue(value:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MinLengthProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: MinLengthProperty)(p: JsonoidParams): MinLengthProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinLengthProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.MinLengthProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MinLengthProperty", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(otherProp: MinLengthProperty)(p: JsonoidParams): MinLengthProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinLengthProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#intersectMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.MinLengthProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MinLengthProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinLengthProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): MinLengthProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinLengthProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MinLengthProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinLengthProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.MinLengthProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinLengthProperty#<init>", "error" : "unsupported entity"}, {"label" : "minLength", "tail" : ": Option[Int]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinLengthProperty.minLength", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#minLength:Option[Int]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[String], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinLengthProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty", "shortDescription" : "Tracks the minimum value of all numbers.", "members_case class" : [{"label" : "expandTo", "tail" : "(other: Option[MinNumValueProperty]): MinNumValueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#expandTo(other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty]):io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: MinNumValueProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: BigDecimal)(p: JsonoidParams): MinNumValueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#mergeValue(value:BigDecimal)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: MinNumValueProperty)(p: JsonoidParams): MinNumValueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(otherProp: MinNumValueProperty)(p: JsonoidParams): MinNumValueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#intersectMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): MinNumValueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty#<init>", "error" : "unsupported entity"}, {"label" : "exclusive", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty.exclusive", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#exclusive:Boolean", "kind" : "val"}, {"label" : "minNumValue", "tail" : ": Option[BigDecimal]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.MinNumValueProperty.minNumValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#minNumValue:Option[BigDecimal]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[BigDecimal], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/MinNumValueProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.NullSchema", "shortDescription" : "Represents null in JSON Schema.", "members_case class" : [{"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, t: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NullSchema.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicitt:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: JsonSchema[_], recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NullSchema.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "isValidType", "tail" : "(value: S): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NullSchema.isValidType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#isValidType[S<:org.json4s.JValue](value:S):Boolean", "kind" : "def"}, {"label" : "copy", "tail" : "(properties: SchemaProperties[Nothing]): NullSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NullSchema.copy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#copy(properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Nothing]):io.github.dataunitylab.jsonoid.discovery.schemas.NullSchema", "kind" : "def"}, {"label" : "mergeSameType", "tail" : "(mergeType: MergeType)(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NullSchema.mergeSameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#mergeSameType(mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "validTypes", "tail" : ": Set[Class[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NullSchema.validTypes", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#validTypes:Set[Class[_]]", "kind" : "val"}, {"label" : "schemaType", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NullSchema.schemaType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#schemaType:String", "kind" : "val"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NullSchema#<init>", "error" : "unsupported entity"}, {"label" : "properties", "tail" : ": SchemaProperties[Nothing]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NullSchema.properties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Nothing]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "entropy", "tail" : "(p: JsonoidParams): Option[Long]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.entropy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#entropy(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[Long]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[JsonSchema[S]]): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#expandTo[S](other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[S]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "findIncompatibilities", "tail" : "(other: JsonSchema[_], recursive: Boolean): Seq[ClassTag[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findIncompatibilities", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#findIncompatibilities(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean):Seq[scala.reflect.ClassTag[_]]", "kind" : "def"}, {"label" : "onlyPropertiesNamed", "tail" : "(props: Seq[String]): JsonSchema[Nothing]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyPropertiesNamed", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#onlyPropertiesNamed(props:Seq[String]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "onlyProperties", "tail" : "(props: Seq[Class[_]]): JsonSchema[Nothing]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#onlyProperties(props:Seq[Class[_]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "maxAnomalyLevel", "tail" : "(value: S, path: String)(tag: ClassTag[S], p: JsonoidParams): Option[AnomalyLevel]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.maxAnomalyLevel", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#maxAnomalyLevel[S<:org.json4s.JValue](value:S,path:String)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[io.github.dataunitylab.jsonoid.discovery.AnomalyLevel]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String, level: AnomalyLevel)(tag: ClassTag[S], p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String,level:io.github.dataunitylab.jsonoid.discovery.AnomalyLevel)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "replaceWithReference", "tail" : "(pointer: JsonPointer, reference: String, obj: Option[JsonSchema[_]])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithReference", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#replaceWithReference(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,reference:String,obj:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "replaceWithSchema", "tail" : "(pointer: JsonPointer, replaceSchema: JsonSchema[_])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#replaceWithSchema(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,replaceSchema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "findByInexactPointer", "tail" : "(pointer: JsonPointer): Seq[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findByInexactPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#findByInexactPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Seq[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "findByPointer", "tail" : "(pointer: JsonPointer): Option[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findByPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#findByPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "transformPropertiesWithInexactPath", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], transformBase: Boolean, path: String): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformPropertiesWithInexactPath", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#transformPropertiesWithInexactPath(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean,path:String):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "transformProperties", "tail" : "(transformer: PartialFunction[JsonSchema[_], JsonSchema[_]], transformBase: Boolean): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#transformProperties(transformer:PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "copyWithReset", "tail" : "()(p: JsonoidParams): JsonSchema[Nothing]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.copyWithReset", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#copyWithReset()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "merge", "tail" : "(other: JsonSchema[_], mergeType: MergeType)(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.merge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#merge(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isMaxMin", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isMaxMin", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#isMaxMin:Boolean", "kind" : "def"}, {"label" : "createProduct", "tail" : "()(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.createProduct", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#createProduct()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "hasType", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.hasType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#hasType:Boolean", "kind" : "def"}, {"label" : "isNumeric", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isNumeric", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#isNumeric:Boolean", "kind" : "def"}, {"label" : "addDefinition", "tail" : "(definition: JsonSchema[_], name: String): Unit", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.addDefinition", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#addDefinition(definition:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],name:String):Unit", "kind" : "def"}, {"label" : "definitions", "tail" : ": Map[String, JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.definitions", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#definitions:scala.collection.mutable.Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "val"}, {"label" : "toJsonSchema", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJsonSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#toJsonSchema()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NullSchema.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumberSchema", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html", "members_object" : [{"label" : "SimpleProperties", "tail" : ": SchemaProperties[BigDecimal]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumberSchema.SimpleProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#SimpleProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[BigDecimal]", "kind" : "lazy val"}, {"label" : "MinProperties", "tail" : ": SchemaProperties[BigDecimal]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumberSchema.MinProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#MinProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[BigDecimal]", "kind" : "lazy val"}, {"label" : "AllProperties", "tail" : ": SchemaProperties[BigDecimal]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumberSchema.AllProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#AllProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[BigDecimal]", "kind" : "lazy val"}, {"label" : "fromJson", "tail" : "(num: JObject): NumberSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumberSchema.fromJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#fromJson(num:org.json4s.JObject):io.github.dataunitylab.jsonoid.discovery.schemas.NumberSchema", "kind" : "def"}, {"label" : "apply", "tail" : "(value: BigDecimal)(p: JsonoidParams): NumberSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumberSchema.apply", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#apply(value:BigDecimal)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.NumberSchema", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "isSubsetOf", "tail" : "(other: JsonSchema[_], recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumberSchema.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "copy", "tail" : "(properties: SchemaProperties[BigDecimal]): NumberSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumberSchema.copy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#copy(properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[BigDecimal]):io.github.dataunitylab.jsonoid.discovery.schemas.NumberSchema", "kind" : "def"}, {"label" : "mergeSameType", "tail" : "(mergeType: MergeType)(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumberSchema.mergeSameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#mergeSameType(mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "validTypes", "tail" : ": Set[Class[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumberSchema.validTypes", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#validTypes:Set[Class[_]]", "kind" : "val"}, {"label" : "isNumeric", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumberSchema.isNumeric", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#isNumeric:Boolean", "kind" : "val"}, {"label" : "schemaType", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumberSchema.schemaType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#schemaType:String", "kind" : "val"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumberSchema#<init>", "error" : "unsupported entity"}, {"label" : "properties", "tail" : ": SchemaProperties[BigDecimal]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumberSchema.properties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[BigDecimal]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "entropy", "tail" : "(p: JsonoidParams): Option[Long]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.entropy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#entropy(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[Long]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[JsonSchema[S]]): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#expandTo[S](other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[S]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "findIncompatibilities", "tail" : "(other: JsonSchema[_], recursive: Boolean): Seq[ClassTag[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findIncompatibilities", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#findIncompatibilities(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean):Seq[scala.reflect.ClassTag[_]]", "kind" : "def"}, {"label" : "onlyPropertiesNamed", "tail" : "(props: Seq[String]): JsonSchema[BigDecimal]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyPropertiesNamed", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#onlyPropertiesNamed(props:Seq[String]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "onlyProperties", "tail" : "(props: Seq[Class[_]]): JsonSchema[BigDecimal]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#onlyProperties(props:Seq[Class[_]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "maxAnomalyLevel", "tail" : "(value: S, path: String)(tag: ClassTag[S], p: JsonoidParams): Option[AnomalyLevel]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.maxAnomalyLevel", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#maxAnomalyLevel[S<:org.json4s.JValue](value:S,path:String)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[io.github.dataunitylab.jsonoid.discovery.AnomalyLevel]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String, level: AnomalyLevel)(tag: ClassTag[S], p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String,level:io.github.dataunitylab.jsonoid.discovery.AnomalyLevel)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "replaceWithReference", "tail" : "(pointer: JsonPointer, reference: String, obj: Option[JsonSchema[_]])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithReference", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#replaceWithReference(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,reference:String,obj:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "replaceWithSchema", "tail" : "(pointer: JsonPointer, replaceSchema: JsonSchema[_])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#replaceWithSchema(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,replaceSchema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "findByInexactPointer", "tail" : "(pointer: JsonPointer): Seq[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findByInexactPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#findByInexactPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Seq[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "findByPointer", "tail" : "(pointer: JsonPointer): Option[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findByPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#findByPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "transformPropertiesWithInexactPath", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], transformBase: Boolean, path: String): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformPropertiesWithInexactPath", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#transformPropertiesWithInexactPath(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean,path:String):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "transformProperties", "tail" : "(transformer: PartialFunction[JsonSchema[_], JsonSchema[_]], transformBase: Boolean): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#transformProperties(transformer:PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "copyWithReset", "tail" : "()(p: JsonoidParams): JsonSchema[BigDecimal]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.copyWithReset", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#copyWithReset()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "merge", "tail" : "(other: JsonSchema[_], mergeType: MergeType)(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.merge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#merge(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isMaxMin", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isMaxMin", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#isMaxMin:Boolean", "kind" : "def"}, {"label" : "createProduct", "tail" : "()(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.createProduct", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#createProduct()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "isValidType", "tail" : "(value: S): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isValidType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#isValidType[S<:org.json4s.JValue](value:S):Boolean", "kind" : "def"}, {"label" : "hasType", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.hasType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#hasType:Boolean", "kind" : "def"}, {"label" : "addDefinition", "tail" : "(definition: JsonSchema[_], name: String): Unit", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.addDefinition", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#addDefinition(definition:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],name:String):Unit", "kind" : "def"}, {"label" : "definitions", "tail" : ": Map[String, JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.definitions", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#definitions:scala.collection.mutable.Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "val"}, {"label" : "toJsonSchema", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJsonSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#toJsonSchema()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumberSchema.html", "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumBloomFilterProperty", "shortDescription" : "Tracks possible numbers which can be contained in the set", "members_case class" : [{"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumBloomFilterProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: BigDecimal)(p: JsonoidParams): NumBloomFilterProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumBloomFilterProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#mergeValue(value:BigDecimal)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.NumBloomFilterProperty", "kind" : "def"}, {"label" : "scaleValue", "tail" : "(value: BigDecimal): Array[Byte]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumBloomFilterProperty.scaleValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#scaleValue(value:BigDecimal):Array[Byte]", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: NumBloomFilterProperty)(p: JsonoidParams): NumBloomFilterProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumBloomFilterProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.NumBloomFilterProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.NumBloomFilterProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumBloomFilterProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "isInformational", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumBloomFilterProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#isInformational:Boolean", "kind" : "val"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): NumBloomFilterProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumBloomFilterProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.NumBloomFilterProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumBloomFilterProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.NumBloomFilterProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumBloomFilterProperty#<init>", "error" : "unsupported entity"}, {"label" : "bloomFilter", "tail" : ": BloomFilter[Double]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumBloomFilterProperty.bloomFilter", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#bloomFilter:io.github.dataunitylab.jsonoid.discovery.utils.BloomFilter[Double]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: S, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#isSubsetOf(other:SchemaProperty.this.S,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[BigDecimal], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumBloomFilterProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumExamplesProperty", "shortDescription" : "Tracks examples observed for these numbers.", "members_case class" : [{"label" : "mergeValue", "tail" : "(value: BigDecimal)(p: JsonoidParams): NumExamplesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumExamplesProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#mergeValue(value:BigDecimal)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.NumExamplesProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: NumExamplesProperty)(p: JsonoidParams): NumExamplesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumExamplesProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.NumExamplesProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.NumExamplesProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumExamplesProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "isInformational", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumExamplesProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#isInformational:Boolean", "kind" : "val"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): NumExamplesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumExamplesProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.NumExamplesProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumExamplesProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.NumExamplesProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumExamplesProperty#<init>", "error" : "unsupported entity"}, {"label" : "examples", "tail" : ": ExamplesProperty[BigDecimal]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumExamplesProperty.examples", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#examples:io.github.dataunitylab.jsonoid.discovery.schemas.ExamplesProperty[BigDecimal]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: S, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#isSubsetOf(other:SchemaProperty.this.S,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[BigDecimal], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumExamplesProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumHistogramProperty", "shortDescription" : "Tracks a histogram of number values.", "members_case class" : [{"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumHistogramProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: BigDecimal)(p: JsonoidParams): NumHistogramProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumHistogramProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#mergeValue(value:BigDecimal)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.NumHistogramProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: NumHistogramProperty)(p: JsonoidParams): NumHistogramProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumHistogramProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.NumHistogramProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.NumHistogramProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumHistogramProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "isInformational", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumHistogramProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#isInformational:Boolean", "kind" : "val"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): NumHistogramProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumHistogramProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.NumHistogramProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumHistogramProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.NumHistogramProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumHistogramProperty#<init>", "error" : "unsupported entity"}, {"label" : "histogram", "tail" : ": Histogram", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumHistogramProperty.histogram", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#histogram:io.github.dataunitylab.jsonoid.discovery.utils.Histogram", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: S, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#isSubsetOf(other:SchemaProperty.this.S,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[BigDecimal], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHistogramProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumHyperLogLogProperty", "shortDescription" : "Tracks the estimated cardinality of the set of number values.", "members_case class" : [{"label" : "mergeValue", "tail" : "(value: BigDecimal)(p: JsonoidParams): NumHyperLogLogProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumHyperLogLogProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#mergeValue(value:BigDecimal)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.NumHyperLogLogProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: NumHyperLogLogProperty)(p: JsonoidParams): NumHyperLogLogProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumHyperLogLogProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.NumHyperLogLogProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.NumHyperLogLogProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumHyperLogLogProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "isInformational", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumHyperLogLogProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#isInformational:Boolean", "kind" : "val"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): NumHyperLogLogProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumHyperLogLogProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.NumHyperLogLogProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumHyperLogLogProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.NumHyperLogLogProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumHyperLogLogProperty#<init>", "error" : "unsupported entity"}, {"label" : "hll", "tail" : ": HyperLogLog", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumHyperLogLogProperty.hll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#hll:io.github.dataunitylab.jsonoid.discovery.utils.HyperLogLog", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: S, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#isSubsetOf(other:SchemaProperty.this.S,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[BigDecimal], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumHyperLogLogProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumMultipleOfProperty", "shortDescription" : "", "members_case class" : [{"label" : "expandTo", "tail" : "(other: Option[NumMultipleOfProperty]): NumMultipleOfProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumMultipleOfProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#expandTo(other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.NumMultipleOfProperty]):io.github.dataunitylab.jsonoid.discovery.schemas.NumMultipleOfProperty", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: NumMultipleOfProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumMultipleOfProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.NumMultipleOfProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: BigDecimal)(p: JsonoidParams): NumMultipleOfProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumMultipleOfProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#mergeValue(value:BigDecimal)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.NumMultipleOfProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: NumMultipleOfProperty)(p: JsonoidParams): NumMultipleOfProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumMultipleOfProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.NumMultipleOfProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.NumMultipleOfProperty", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(otherProp: NumMultipleOfProperty)(p: JsonoidParams): NumMultipleOfProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumMultipleOfProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#intersectMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.NumMultipleOfProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.NumMultipleOfProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumMultipleOfProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): NumMultipleOfProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumMultipleOfProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.NumMultipleOfProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumMultipleOfProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.NumMultipleOfProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumMultipleOfProperty#<init>", "error" : "unsupported entity"}, {"label" : "tiny", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumMultipleOfProperty.tiny", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#tiny:Boolean", "kind" : "val"}, {"label" : "multiple", "tail" : ": Option[BigDecimal]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumMultipleOfProperty.multiple", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#multiple:Option[BigDecimal]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[BigDecimal], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumMultipleOfProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumStatsProperty", "shortDescription" : "Tracks statistics on the numbers in this set", "members_case class" : [{"label" : "mergeValue", "tail" : "(value: BigDecimal)(p: JsonoidParams): NumStatsProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumStatsProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#mergeValue(value:BigDecimal)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.NumStatsProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: NumStatsProperty)(p: JsonoidParams): NumStatsProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumStatsProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.NumStatsProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.NumStatsProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumStatsProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "isInformational", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumStatsProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#isInformational:Boolean", "kind" : "val"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): NumStatsProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumStatsProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.NumStatsProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumStatsProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.NumStatsProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumStatsProperty#<init>", "error" : "unsupported entity"}, {"label" : "stats", "tail" : ": StatsProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.NumStatsProperty.stats", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#stats:io.github.dataunitylab.jsonoid.discovery.schemas.StatsProperty", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: S, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#isSubsetOf(other:SchemaProperty.this.S,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[BigDecimal], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/NumStatsProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html", "members_object" : [{"label" : "SimpleProperties", "tail" : ": SchemaProperties[Map[String, JsonSchema[_]]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema.SimpleProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#SimpleProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]]", "kind" : "lazy val"}, {"label" : "MinProperties", "tail" : ": SchemaProperties[Map[String, JsonSchema[_]]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema.MinProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#MinProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]]", "kind" : "lazy val"}, {"label" : "AllProperties", "tail" : ": SchemaProperties[Map[String, JsonSchema[_]]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema.AllProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#AllProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]]", "kind" : "lazy val"}, {"label" : "fromJson", "tail" : "(obj: JObject)(p: JsonoidParams): ObjectSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema.fromJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#fromJson(obj:org.json4s.JObject)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema", "kind" : "def"}, {"label" : "apply", "tail" : "(value: Map[String, JsonSchema[_]])(p: JsonoidParams): ObjectSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema.apply", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#apply(value:Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "toDynamicObjectSchema", "tail" : "()(p: JsonoidParams): DynamicObjectSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema.toDynamicObjectSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#toDynamicObjectSchema()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.DynamicObjectSchema", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "entropy", "tail" : "(p: JsonoidParams): Option[Long]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema.entropy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#entropy(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[Long]", "kind" : "def"}, {"label" : "onlyKeys", "tail" : "(keys: Set[String]): ObjectSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema.onlyKeys", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#onlyKeys(keys:Set[String]):io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema", "kind" : "def"}, {"label" : "replaceWithSchema", "tail" : "(pointer: JsonPointer, replaceSchema: JsonSchema[_])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema.replaceWithSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#replaceWithSchema(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,replaceSchema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "findByInexactPointer", "tail" : "(pointer: JsonPointer): Seq[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema.findByInexactPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#findByInexactPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Seq[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "findByPointer", "tail" : "(pointer: JsonPointer): Option[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema.findByPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#findByPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "copy", "tail" : "(properties: SchemaProperties[Map[String, JsonSchema[_]]]): ObjectSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema.copy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#copy(properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]]):io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema", "kind" : "def"}, {"label" : "mergeSameType", "tail" : "(mergeType: MergeType)(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema.mergeSameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#mergeSameType(mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "validTypes", "tail" : ": Set[Class[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema.validTypes", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#validTypes:Set[Class[_]]", "kind" : "val"}, {"label" : "schemaType", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema.schemaType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#schemaType:String", "kind" : "val"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema#<init>", "error" : "unsupported entity"}, {"label" : "properties", "tail" : ": SchemaProperties[Map[String, JsonSchema[_]]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectSchema.properties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[JsonSchema[S]]): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#expandTo[S](other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[S]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: JsonSchema[_], recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "findIncompatibilities", "tail" : "(other: JsonSchema[_], recursive: Boolean): Seq[ClassTag[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findIncompatibilities", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#findIncompatibilities(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean):Seq[scala.reflect.ClassTag[_]]", "kind" : "def"}, {"label" : "onlyPropertiesNamed", "tail" : "(props: Seq[String]): JsonSchema[Map[String, JsonSchema[_]]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyPropertiesNamed", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#onlyPropertiesNamed(props:Seq[String]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "onlyProperties", "tail" : "(props: Seq[Class[_]]): JsonSchema[Map[String, JsonSchema[_]]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#onlyProperties(props:Seq[Class[_]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "maxAnomalyLevel", "tail" : "(value: S, path: String)(tag: ClassTag[S], p: JsonoidParams): Option[AnomalyLevel]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.maxAnomalyLevel", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#maxAnomalyLevel[S<:org.json4s.JValue](value:S,path:String)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[io.github.dataunitylab.jsonoid.discovery.AnomalyLevel]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String, level: AnomalyLevel)(tag: ClassTag[S], p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String,level:io.github.dataunitylab.jsonoid.discovery.AnomalyLevel)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "replaceWithReference", "tail" : "(pointer: JsonPointer, reference: String, obj: Option[JsonSchema[_]])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithReference", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#replaceWithReference(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,reference:String,obj:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "transformPropertiesWithInexactPath", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], transformBase: Boolean, path: String): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformPropertiesWithInexactPath", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#transformPropertiesWithInexactPath(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean,path:String):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "transformProperties", "tail" : "(transformer: PartialFunction[JsonSchema[_], JsonSchema[_]], transformBase: Boolean): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#transformProperties(transformer:PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "copyWithReset", "tail" : "()(p: JsonoidParams): JsonSchema[Map[String, JsonSchema[_]]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.copyWithReset", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#copyWithReset()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "merge", "tail" : "(other: JsonSchema[_], mergeType: MergeType)(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.merge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#merge(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isMaxMin", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isMaxMin", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#isMaxMin:Boolean", "kind" : "def"}, {"label" : "createProduct", "tail" : "()(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.createProduct", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#createProduct()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "isValidType", "tail" : "(value: S): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isValidType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#isValidType[S<:org.json4s.JValue](value:S):Boolean", "kind" : "def"}, {"label" : "hasType", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.hasType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#hasType:Boolean", "kind" : "def"}, {"label" : "isNumeric", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isNumeric", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#isNumeric:Boolean", "kind" : "def"}, {"label" : "addDefinition", "tail" : "(definition: JsonSchema[_], name: String): Unit", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.addDefinition", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#addDefinition(definition:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],name:String):Unit", "kind" : "def"}, {"label" : "definitions", "tail" : ": Map[String, JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.definitions", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#definitions:scala.collection.mutable.Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "val"}, {"label" : "toJsonSchema", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJsonSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#toJsonSchema()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectSchema.html", "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty", "shortDescription" : "The types of all keys in an object schema.", "members_case class" : [{"label" : "expandTo", "tail" : "(other: Option[ObjectTypesProperty]): ObjectTypesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#expandTo(other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty]):io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: ObjectTypesProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: Map[String, JsonSchema[_]], mergeType: MergeType)(p: JsonoidParams): ObjectTypesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#mergeValue(value:Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: Map[String, JsonSchema[_]])(p: JsonoidParams): ObjectTypesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#mergeValue(value:Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: ObjectTypesProperty)(p: JsonoidParams): ObjectTypesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(otherProp: ObjectTypesProperty)(p: JsonoidParams): ObjectTypesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#intersectMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): ObjectTypesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty", "kind" : "def"}, {"label" : "onlyKeys", "tail" : "(keys: Set[String]): ObjectTypesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty.onlyKeys", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#onlyKeys(keys:Set[String]):io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): ObjectTypesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty#<init>", "error" : "unsupported entity"}, {"label" : "objectTypes", "tail" : ": Map[String, JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ObjectTypesProperty.objectTypes", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#objectTypes:Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[Map[String, JsonSchema[_]]], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ObjectTypesProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.OneOf", "case object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/OneOf$.html", "shortDescription" : "", "members_case object" : [{"label" : "toJson", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.OneOf.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/OneOf$.html#toJson:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/OneOf$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/OneOf$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/OneOf$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/OneOf$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/OneOf$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/OneOf$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/OneOf$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/OneOf$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/OneOf$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/OneOf$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/OneOf$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/OneOf$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/OneOf$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/OneOf$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/OneOf$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/OneOf$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/OneOf$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/OneOf$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/OneOf$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty$.html", "members_object" : [{"label" : "MinExamples", "tail" : ": Int", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty.MinExamples", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty$.html#MinExamples:Int", "kind" : "val"}, {"label" : "ReplaceRegex", "tail" : ": Regex", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty.ReplaceRegex", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty$.html#ReplaceRegex:scala.util.matching.Regex", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "expandTo", "tail" : "(other: Option[PatternProperty]): PatternProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#expandTo(other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty]):io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: PatternProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: String)(p: JsonoidParams): PatternProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#mergeValue(value:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: PatternProperty)(p: JsonoidParams): PatternProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): PatternProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty#<init>", "error" : "unsupported entity"}, {"label" : "minLength", "tail" : ": Option[Int]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty.minLength", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#minLength:Option[Int]", "kind" : "val"}, {"label" : "examples", "tail" : ": Int", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty.examples", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#examples:Int", "kind" : "val"}, {"label" : "suffix", "tail" : ": Option[String]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty.suffix", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#suffix:Option[String]", "kind" : "val"}, {"label" : "prefix", "tail" : ": Option[String]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternProperty.prefix", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#prefix:Option[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[String], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternProperty.html", "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternTypesProperty", "shortDescription" : "The types of all keys in an object schema which match given patterns.", "members_case class" : [{"label" : "collectAnomaliesAllowMissing", "tail" : "(value: S, path: String, missingOk: Set[String], additionalProperties: Boolean)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternTypesProperty.collectAnomaliesAllowMissing", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#collectAnomaliesAllowMissing[S<:org.json4s.JValue](value:S,path:String,missingOk:Set[String],additionalProperties:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternTypesProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValueRegex", "tail" : "(value: Map[Regex, JsonSchema[_]], mergeType: MergeType)(p: JsonoidParams): PatternTypesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternTypesProperty.mergeValueRegex", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#mergeValueRegex(value:Map[scala.util.matching.Regex,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.PatternTypesProperty", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: Map[String, JsonSchema[_]])(p: JsonoidParams): PatternTypesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternTypesProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#mergeValue(value:Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.PatternTypesProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: PatternTypesProperty)(p: JsonoidParams): PatternTypesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternTypesProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.PatternTypesProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.PatternTypesProperty", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(otherProp: PatternTypesProperty)(p: JsonoidParams): PatternTypesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternTypesProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#intersectMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.PatternTypesProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.PatternTypesProperty", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): PatternTypesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternTypesProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):io.github.dataunitylab.jsonoid.discovery.schemas.PatternTypesProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternTypesProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): PatternTypesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternTypesProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.PatternTypesProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternTypesProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.PatternTypesProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternTypesProperty#<init>", "error" : "unsupported entity"}, {"label" : "patternTypes", "tail" : ": Map[Regex, JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PatternTypesProperty.patternTypes", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#patternTypes:Map[scala.util.matching.Regex,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: S, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#isSubsetOf(other:SchemaProperty.this.S,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[Map[String, JsonSchema[_]]], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PatternTypesProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchema", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema$.html", "members_object" : [{"label" : "product", "tail" : "(schemas: List[JsonSchema[_]], productType: ProductType)(p: JsonoidParams): ProductSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchema.product", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema$.html#product(schemas:List[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],productType:io.github.dataunitylab.jsonoid.discovery.schemas.ProductType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchema", "kind" : "def"}, {"label" : "apply", "tail" : "(value: JsonSchema[_])(p: JsonoidParams): ProductSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchema.apply", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema$.html#apply(value:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchema", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "entropy", "tail" : "(p: JsonoidParams): Option[Long]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchema.entropy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#entropy(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[Long]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[JsonSchema[S]]): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchema.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#expandTo[S](other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[S]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isSupersetOf", "tail" : "(other: JsonSchema[_], recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchema.isSupersetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#isSupersetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: JsonSchema[_], recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchema.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "replaceWithSchema", "tail" : "(pointer: JsonPointer, replaceSchema: JsonSchema[_])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchema.replaceWithSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#replaceWithSchema(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,replaceSchema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "findByInexactPointer", "tail" : "(pointer: JsonPointer): Seq[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchema.findByInexactPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#findByInexactPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Seq[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "findByPointer", "tail" : "(pointer: JsonPointer): Option[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchema.findByPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#findByPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "copy", "tail" : "(properties: SchemaProperties[JsonSchema[_]]): ProductSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchema.copy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#copy(properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]):io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchema", "kind" : "def"}, {"label" : "merge", "tail" : "(other: JsonSchema[_], mergeType: MergeType)(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchema.merge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#merge(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "mergeSameType", "tail" : "(mergeType: MergeType)(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchema.mergeSameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#mergeSameType(mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "schemaType", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchema.schemaType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#schemaType:String", "kind" : "val"}, {"label" : "isValidType", "tail" : "(value: S): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchema.isValidType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#isValidType[S<:org.json4s.JValue](value:S):Boolean", "kind" : "def"}, {"label" : "validTypes", "tail" : ": Set[Class[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchema.validTypes", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#validTypes:Set[Class[_]]", "kind" : "val"}, {"label" : "hasType", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchema.hasType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#hasType:Boolean", "kind" : "def"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchema#<init>", "error" : "unsupported entity"}, {"label" : "properties", "tail" : ": SchemaProperties[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchema.properties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "findIncompatibilities", "tail" : "(other: JsonSchema[_], recursive: Boolean): Seq[ClassTag[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findIncompatibilities", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#findIncompatibilities(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean):Seq[scala.reflect.ClassTag[_]]", "kind" : "def"}, {"label" : "onlyPropertiesNamed", "tail" : "(props: Seq[String]): JsonSchema[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyPropertiesNamed", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#onlyPropertiesNamed(props:Seq[String]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "onlyProperties", "tail" : "(props: Seq[Class[_]]): JsonSchema[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#onlyProperties(props:Seq[Class[_]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "maxAnomalyLevel", "tail" : "(value: S, path: String)(tag: ClassTag[S], p: JsonoidParams): Option[AnomalyLevel]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.maxAnomalyLevel", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#maxAnomalyLevel[S<:org.json4s.JValue](value:S,path:String)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[io.github.dataunitylab.jsonoid.discovery.AnomalyLevel]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String, level: AnomalyLevel)(tag: ClassTag[S], p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String,level:io.github.dataunitylab.jsonoid.discovery.AnomalyLevel)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "replaceWithReference", "tail" : "(pointer: JsonPointer, reference: String, obj: Option[JsonSchema[_]])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithReference", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#replaceWithReference(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,reference:String,obj:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "transformPropertiesWithInexactPath", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], transformBase: Boolean, path: String): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformPropertiesWithInexactPath", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#transformPropertiesWithInexactPath(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean,path:String):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "transformProperties", "tail" : "(transformer: PartialFunction[JsonSchema[_], JsonSchema[_]], transformBase: Boolean): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#transformProperties(transformer:PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "copyWithReset", "tail" : "()(p: JsonoidParams): JsonSchema[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.copyWithReset", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#copyWithReset()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "isMaxMin", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isMaxMin", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#isMaxMin:Boolean", "kind" : "def"}, {"label" : "createProduct", "tail" : "()(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.createProduct", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#createProduct()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "isNumeric", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isNumeric", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#isNumeric:Boolean", "kind" : "def"}, {"label" : "addDefinition", "tail" : "(definition: JsonSchema[_], name: String): Unit", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.addDefinition", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#addDefinition(definition:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],name:String):Unit", "kind" : "def"}, {"label" : "definitions", "tail" : ": Map[String, JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.definitions", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#definitions:scala.collection.mutable.Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "val"}, {"label" : "toJsonSchema", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJsonSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#toJsonSchema()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchema.html", "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty", "shortDescription" : "The types of all values in a product schema.", "members_case class" : [{"label" : "expandTo", "tail" : "(other: Option[ProductSchemaTypesProperty]): ProductSchemaTypesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#expandTo(other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty]):io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: ProductSchemaTypesProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "schemas", "tail" : "(): Seq[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty.schemas", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#schemas:Seq[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: JsonSchema[_])(p: JsonoidParams): ProductSchemaTypesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#mergeValue(value:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty", "kind" : "def"}, {"label" : "mergeWithCount", "tail" : "(count: BigInt, schema: JsonSchema[_], mergeType: MergeType, otherBase: JsonSchema[_])(p: JsonoidParams): ProductSchemaTypesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty.mergeWithCount", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#mergeWithCount(count:BigInt,schema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType,otherBase:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: ProductSchemaTypesProperty)(p: JsonoidParams): ProductSchemaTypesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(otherProp: ProductSchemaTypesProperty)(p: JsonoidParams): ProductSchemaTypesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#intersectMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): ProductSchemaTypesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): ProductSchemaTypesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty#<init>", "error" : "unsupported entity"}, {"label" : "productType", "tail" : ": ProductType", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty.productType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#productType:io.github.dataunitylab.jsonoid.discovery.schemas.ProductType", "kind" : "val"}, {"label" : "schemaCounts", "tail" : ": List[BigInt]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty.schemaCounts", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#schemaCounts:List[BigInt]", "kind" : "val"}, {"label" : "schemaTypes", "tail" : ": List[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty.schemaTypes", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#schemaTypes:List[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "val"}, {"label" : "baseSchema", "tail" : ": JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductSchemaTypesProperty.baseSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#baseSchema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[JsonSchema[_]], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductSchemaTypesProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductType", "trait" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductType.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductType.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductType.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toJson", "tail" : "(): String", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ProductType.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ProductType.html#toJson:String", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet", "shortDescription" : "Sets of properties which can be used during schema discovery.", "members_case class" : [{"label" : "onlyNamed", "tail" : "(propNames: Seq[String]): PropertySet", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet.onlyNamed", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#onlyNamed(propNames:Seq[String]):io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet", "kind" : "def"}, {"label" : "only", "tail" : "(propClasses: Seq[Class[_]]): PropertySet", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet.only", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#only(propClasses:Seq[Class[_]]):io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet", "kind" : "def"}, {"label" : "withoutNamed", "tail" : "(propNames: Seq[String]): PropertySet", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet.withoutNamed", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#withoutNamed(propNames:Seq[String]):io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet", "kind" : "def"}, {"label" : "without", "tail" : "(propClasses: Seq[Class[_]]): PropertySet", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet.without", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#without(propClasses:Seq[Class[_]]):io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet", "kind" : "def"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet#<init>", "error" : "unsupported entity"}, {"label" : "stringProperties", "tail" : ": SchemaProperties[String]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet.stringProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#stringProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[String]", "kind" : "val"}, {"label" : "objectProperties", "tail" : ": SchemaProperties[Map[String, JsonSchema[_]]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet.objectProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#objectProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]]", "kind" : "val"}, {"label" : "numberProperties", "tail" : ": SchemaProperties[BigDecimal]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet.numberProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#numberProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[BigDecimal]", "kind" : "val"}, {"label" : "integerProperties", "tail" : ": SchemaProperties[BigInt]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet.integerProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#integerProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[BigInt]", "kind" : "val"}, {"label" : "booleanProperties", "tail" : ": SchemaProperties[Boolean]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet.booleanProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#booleanProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Boolean]", "kind" : "val"}, {"label" : "arrayProperties", "tail" : ": SchemaProperties[List[JsonSchema[_]]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet.arrayProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#arrayProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[List[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySet.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.PropertySets", "shortDescription" : "Common collections of PropertySet values for discover.", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html", "members_object" : [{"label" : "SimpleProperties", "tail" : ": PropertySet", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PropertySets.SimpleProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html#SimpleProperties:io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet", "kind" : "val"}, {"label" : "MinProperties", "tail" : ": PropertySet", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PropertySets.MinProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html#MinProperties:io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet", "kind" : "val"}, {"label" : "AllProperties", "tail" : ": PropertySet", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.PropertySets.AllProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html#AllProperties:io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/PropertySets$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceObjectProperty", "shortDescription" : "Represents a reference to a particular schema object.", "members_case class" : [{"label" : "mergeValue", "tail" : "(otherObject: String)(p: JsonoidParams): ReferenceObjectProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceObjectProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#mergeValue(otherObject:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceObjectProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: ReferenceObjectProperty)(p: JsonoidParams): ReferenceObjectProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceObjectProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceObjectProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceObjectProperty", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceObjectProperty.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#toString():String", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceObjectProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): ReferenceObjectProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceObjectProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceObjectProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceObjectProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceObjectProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceObjectProperty#<init>", "error" : "unsupported entity"}, {"label" : "schema", "tail" : ": JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceObjectProperty.schema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#schema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: S, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#isSubsetOf(other:SchemaProperty.this.S,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[String], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceObjectProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferencePointerProperty", "shortDescription" : "Represents a reference to a particular pointer.", "members_case class" : [{"label" : "mergeValue", "tail" : "(otherPointer: String)(p: JsonoidParams): ReferencePointerProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferencePointerProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#mergeValue(otherPointer:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ReferencePointerProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: ReferencePointerProperty)(p: JsonoidParams): ReferencePointerProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferencePointerProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.ReferencePointerProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ReferencePointerProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferencePointerProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): ReferencePointerProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferencePointerProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.ReferencePointerProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferencePointerProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.ReferencePointerProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferencePointerProperty#<init>", "error" : "unsupported entity"}, {"label" : "pointer", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferencePointerProperty.pointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#pointer:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: S, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#isSubsetOf(other:SchemaProperty.this.S,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[String], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferencePointerProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceSchema", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema$.html", "members_object" : [{"label" : "apply", "tail" : "(reference: String, obj: Option[JsonSchema[_]]): ReferenceSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceSchema.apply", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema$.html#apply(reference:String,obj:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]):io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceSchema", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, t: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceSchema.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicitt:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "copy", "tail" : "(properties: SchemaProperties[String]): ReferenceSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceSchema.copy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#copy(properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[String]):io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceSchema", "kind" : "def"}, {"label" : "mergeSameType", "tail" : "(mergeType: MergeType)(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceSchema.mergeSameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#mergeSameType(mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "isValidType", "tail" : "(value: S): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceSchema.isValidType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#isValidType[S<:org.json4s.JValue](value:S):Boolean", "kind" : "def"}, {"label" : "validTypes", "tail" : ": Set[Class[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceSchema.validTypes", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#validTypes:Set[Class[_]]", "kind" : "val"}, {"label" : "schemaType", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceSchema.schemaType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#schemaType:String", "kind" : "val"}, {"label" : "hasType", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceSchema.hasType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#hasType:Boolean", "kind" : "val"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceSchema#<init>", "error" : "unsupported entity"}, {"label" : "properties", "tail" : ": SchemaProperties[String]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ReferenceSchema.properties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "entropy", "tail" : "(p: JsonoidParams): Option[Long]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.entropy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#entropy(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[Long]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[JsonSchema[S]]): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#expandTo[S](other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[S]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: JsonSchema[_], recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "findIncompatibilities", "tail" : "(other: JsonSchema[_], recursive: Boolean): Seq[ClassTag[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findIncompatibilities", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#findIncompatibilities(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean):Seq[scala.reflect.ClassTag[_]]", "kind" : "def"}, {"label" : "onlyPropertiesNamed", "tail" : "(props: Seq[String]): JsonSchema[String]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyPropertiesNamed", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#onlyPropertiesNamed(props:Seq[String]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "onlyProperties", "tail" : "(props: Seq[Class[_]]): JsonSchema[String]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#onlyProperties(props:Seq[Class[_]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "maxAnomalyLevel", "tail" : "(value: S, path: String)(tag: ClassTag[S], p: JsonoidParams): Option[AnomalyLevel]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.maxAnomalyLevel", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#maxAnomalyLevel[S<:org.json4s.JValue](value:S,path:String)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[io.github.dataunitylab.jsonoid.discovery.AnomalyLevel]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String, level: AnomalyLevel)(tag: ClassTag[S], p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String,level:io.github.dataunitylab.jsonoid.discovery.AnomalyLevel)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "replaceWithReference", "tail" : "(pointer: JsonPointer, reference: String, obj: Option[JsonSchema[_]])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithReference", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#replaceWithReference(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,reference:String,obj:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "replaceWithSchema", "tail" : "(pointer: JsonPointer, replaceSchema: JsonSchema[_])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#replaceWithSchema(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,replaceSchema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "findByInexactPointer", "tail" : "(pointer: JsonPointer): Seq[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findByInexactPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#findByInexactPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Seq[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "findByPointer", "tail" : "(pointer: JsonPointer): Option[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findByPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#findByPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "transformPropertiesWithInexactPath", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], transformBase: Boolean, path: String): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformPropertiesWithInexactPath", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#transformPropertiesWithInexactPath(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean,path:String):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "transformProperties", "tail" : "(transformer: PartialFunction[JsonSchema[_], JsonSchema[_]], transformBase: Boolean): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#transformProperties(transformer:PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "copyWithReset", "tail" : "()(p: JsonoidParams): JsonSchema[String]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.copyWithReset", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#copyWithReset()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "merge", "tail" : "(other: JsonSchema[_], mergeType: MergeType)(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.merge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#merge(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isMaxMin", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isMaxMin", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#isMaxMin:Boolean", "kind" : "def"}, {"label" : "createProduct", "tail" : "()(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.createProduct", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#createProduct()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "isNumeric", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isNumeric", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#isNumeric:Boolean", "kind" : "def"}, {"label" : "addDefinition", "tail" : "(definition: JsonSchema[_], name: String): Unit", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.addDefinition", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#addDefinition(definition:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],name:String):Unit", "kind" : "def"}, {"label" : "definitions", "tail" : ": Map[String, JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.definitions", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#definitions:scala.collection.mutable.Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "val"}, {"label" : "toJsonSchema", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJsonSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#toJsonSchema()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ReferenceSchema.html", "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty", "shortDescription" : "Tracks what keys are required in an object schema.", "members_case class" : [{"label" : "expandTo", "tail" : "(other: Option[RequiredProperty]): RequiredProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#expandTo(other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty]):io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: RequiredProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: Map[String, JsonSchema[_]])(p: JsonoidParams): RequiredProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#mergeValue(value:Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: RequiredProperty)(p: JsonoidParams): RequiredProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(otherProp: RequiredProperty)(p: JsonoidParams): RequiredProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#intersectMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty", "kind" : "def"}, {"label" : "onlyKeys", "tail" : "(keys: Set[String]): RequiredProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty.onlyKeys", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#onlyKeys(keys:Set[String]):io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): RequiredProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty#<init>", "error" : "unsupported entity"}, {"label" : "required", "tail" : ": Option[Set[String]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.RequiredProperty.required", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#required:Option[Set[String]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[Map[String, JsonSchema[_]]], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/RequiredProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html", "members_object" : [{"label" : "empty", "tail" : "(): SchemaProperties[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.empty", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html#empty[T]:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[T]", "kind" : "def"}, {"label" : "PropertyMap", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.PropertyMap", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html#PropertyMap[T]=Map[io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.PropertyTag[T],io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T]]", "kind" : "type"}, {"label" : "PropertyTag", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.PropertyTag", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html#PropertyTag[T]=scala.reflect.ClassTag[_<:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T]]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "copyWithReset", "tail" : "()(p: JsonoidParams): SchemaProperties[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.copyWithReset", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#copyWithReset()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[T]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[SchemaProperties[T]]): SchemaProperties[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#expandTo(other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[T]]):io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[T]", "kind" : "def"}, {"label" : "findIncompatibilities", "tail" : "(other: SchemaProperties[S], recursive: Boolean)(p: JsonoidParams): Seq[ClassTag[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.findIncompatibilities", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#findIncompatibilities[S](other:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[S],recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Seq[scala.reflect.ClassTag[_]]", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: SchemaProperties[S], recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#isSubsetOf[S](other:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[S],recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "getIncompatibleProperties", "tail" : "(other: SchemaProperties[S], recursive: Boolean)(p: JsonoidParams): Seq[PropertyTag[T]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.getIncompatibleProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#getIncompatibleProperties[S](other:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[S],recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Seq[io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.PropertyTag[T]]", "kind" : "def"}, {"label" : "without", "tail" : "(props: Seq[Class[_]]): SchemaProperties[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.without", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#without(props:Seq[Class[_]]):io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[T]", "kind" : "def"}, {"label" : "only", "tail" : "(props: Seq[Class[_]]): SchemaProperties[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.only", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#only(props:Seq[Class[_]]):io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[T]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): SchemaProperties[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[T]", "kind" : "def"}, {"label" : "merge", "tail" : "(other: SchemaProperties[T], mergeType: MergeType)(p: JsonoidParams): SchemaProperties[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.merge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#merge(other:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[T]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: T)(p: JsonoidParams): SchemaProperties[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#mergeValue(value:T)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[T]", "kind" : "def"}, {"label" : "replacePropertyWithDefault", "tail" : "()(tag: ClassTag[S], p: JsonoidParams): SchemaProperties[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.replacePropertyWithDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#replacePropertyWithDefault[S<:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T]]()(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[T]", "kind" : "def"}, {"label" : "replaceProperty", "tail" : "(prop: S)(tag: ClassTag[S]): SchemaProperties[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.replaceProperty", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#replaceProperty[S<:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T]](prop:S)(implicittag:scala.reflect.ClassTag[S]):io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[T]", "kind" : "def"}, {"label" : "has", "tail" : "(tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.has", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#has[S<:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T]](implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "getOrNone", "tail" : "(tag: ClassTag[S]): Option[S]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.getOrNone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#getOrNone[S<:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T]](implicittag:scala.reflect.ClassTag[S]):Option[S]", "kind" : "def"}, {"label" : "get", "tail" : "(tag: ClassTag[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.get", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#get[S<:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T]](implicittag:scala.reflect.ClassTag[S]):S", "kind" : "def"}, {"label" : "add", "tail" : "(prop: S)(tag: ClassTag[S]): Unit", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.add", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#add[S<:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T]](prop:S)(implicittag:scala.reflect.ClassTag[S]):Unit", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[SchemaProperty[T]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.iterator", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#iterator:Iterator[io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T]]", "kind" : "def"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties#<init>", "error" : "unsupported entity"}, {"label" : "properties", "tail" : ": PropertyMap[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.properties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties.PropertyMap[T]", "kind" : "var"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: Iterable[B]): LazyZip2[SchemaProperty[T], B, SchemaProperties.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterable.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#toString():String", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Iterable.stringPrefix", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#stringPrefix:String", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): SchemaProperties.this.type", "member" : "scala.collection.Iterable.seq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): IterableFactory[Iterable]", "member" : "scala.collection.Iterable.iterableFactory", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#iterableFactory:scala.collection.IterableFactory[Iterable]", "kind" : "def"}, {"label" : "coll", "tail" : "(): SchemaProperties.this.type", "member" : "scala.collection.Iterable.coll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): SchemaProperties.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Iterable[SchemaProperty[T]]", "member" : "scala.collection.IterableFactoryDefaults.empty", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#empty:CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[SchemaProperty[T], Iterable[SchemaProperty[T]]]", "member" : "scala.collection.IterableFactoryDefaults.newSpecificBuilder", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#newSpecificBuilder:scala.collection.mutable.Builder[A@scala.annotation.unchecked.uncheckedVariance,CC[A@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: IterableOnce[SchemaProperty[T]]): Iterable[SchemaProperty[T]]", "member" : "scala.collection.IterableFactoryDefaults.fromSpecific", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#fromSpecific(coll:scala.collection.IterableOnce[A@scala.annotation.unchecked.uncheckedVariance]):CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "++:", "tail" : "(that: IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.++:", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#++:[B>:A](that:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (SchemaProperty[T]) => U): Iterable[SchemaProperty[T]]", "member" : "scala.collection.IterableOps.tapEach", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Iterable[SchemaProperty[T]]]", "member" : "scala.collection.IterableOps.inits", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Iterable[SchemaProperty[T]]]", "member" : "scala.collection.IterableOps.tails", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (SchemaProperty[T]) => (A1, A2, A3)): (Iterable[A1], Iterable[A2], Iterable[A3])", "member" : "scala.collection.IterableOps.unzip3", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (SchemaProperty[T]) => (A1, A2)): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.IterableOps.unzip", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterable[B], thisElem: A1, thatElem: B): Iterable[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterable[(SchemaProperty[T], Int)]", "member" : "scala.collection.IterableOps.zipWithIndex", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Iterable[(SchemaProperty[T], B)]", "member" : "scala.collection.IterableOps.zip", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.++", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.concat", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (SchemaProperty[T]) => Either[A1, A2]): (Iterable[A1], Iterable[A2])", "member" : "scala.collection.IterableOps.partitionMap", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[SchemaProperty[T], B]): Iterable[B]", "member" : "scala.collection.IterableOps.collect", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asIterable: (SchemaProperty[T]) => IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.flatten", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#flatten[B](implicitasIterable:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (SchemaProperty[T]) => IterableOnce[B]): Iterable[B]", "member" : "scala.collection.IterableOps.flatMap", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (SchemaProperty[T]) => B): Iterable[B]", "member" : "scala.collection.IterableOps.map", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (SchemaProperty[T], B) => B): Iterable[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, SchemaProperty[T]) => B): Iterable[B]", "member" : "scala.collection.IterableOps.scanLeft", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): Iterable[B]", "member" : "scala.collection.IterableOps.scan", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (SchemaProperty[T]) => K)(f: (SchemaProperty[T]) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (SchemaProperty[T]) => K)(f: (SchemaProperty[T]) => B): Map[K, Iterable[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (SchemaProperty[T]) => K): Map[K, Iterable[SchemaProperty[T]]]", "member" : "scala.collection.IterableOps.groupBy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterable[SchemaProperty[T]]", "member" : "scala.collection.IterableOps.slice", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): Iterable[SchemaProperty[T]]", "member" : "scala.collection.IterableOps.init", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): Iterable[SchemaProperty[T]]", "member" : "scala.collection.IterableOps.tail", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Iterable[SchemaProperty[T]]]", "member" : "scala.collection.IterableOps.sliding", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Iterable[SchemaProperty[T]]]", "member" : "scala.collection.IterableOps.sliding", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Iterable[SchemaProperty[T]]]", "member" : "scala.collection.IterableOps.grouped", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (SchemaProperty[T]) => Boolean): Iterable[SchemaProperty[T]]", "member" : "scala.collection.IterableOps.dropWhile", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Iterable[SchemaProperty[T]]", "member" : "scala.collection.IterableOps.dropRight", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterable[SchemaProperty[T]]", "member" : "scala.collection.IterableOps.drop", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#drop(n:Int):C", "kind" : "def"}, {"label" : "span", "tail" : "(p: (SchemaProperty[T]) => Boolean): (Iterable[SchemaProperty[T]], Iterable[SchemaProperty[T]])", "member" : "scala.collection.IterableOps.span", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (SchemaProperty[T]) => Boolean): Iterable[SchemaProperty[T]]", "member" : "scala.collection.IterableOps.takeWhile", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Iterable[SchemaProperty[T]]", "member" : "scala.collection.IterableOps.takeRight", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterable[SchemaProperty[T]]", "member" : "scala.collection.IterableOps.take", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Iterable[SchemaProperty[T]], Iterable[SchemaProperty[T]])", "member" : "scala.collection.IterableOps.splitAt", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (SchemaProperty[T]) => Boolean): (Iterable[SchemaProperty[T]], Iterable[SchemaProperty[T]])", "member" : "scala.collection.IterableOps.partition", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (SchemaProperty[T]) => Boolean): WithFilter[SchemaProperty[T], Iterable]", "member" : "scala.collection.IterableOps.withFilter", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (SchemaProperty[T]) => Boolean): Iterable[SchemaProperty[T]]", "member" : "scala.collection.IterableOps.filterNot", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (SchemaProperty[T]) => Boolean): Iterable[SchemaProperty[T]]", "member" : "scala.collection.IterableOps.filter", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (SchemaProperty[T]) => Iterable[B]): Iterable[Iterable[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[SchemaProperty[T]]", "member" : "scala.collection.IterableOps.view", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#sizeCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#sizeCompare(otherSize:Int):Int", "kind" : "def"}, {"label" : "view", "tail" : "(): View[SchemaProperty[T]]", "member" : "scala.collection.IterableOps.view", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#view:scala.collection.View[A]", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[SchemaProperty[T]]", "member" : "scala.collection.IterableOps.lastOption", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): SchemaProperty[T]", "member" : "scala.collection.IterableOps.last", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[SchemaProperty[T]]", "member" : "scala.collection.IterableOps.headOption", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): SchemaProperty[T]", "member" : "scala.collection.IterableOps.head", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[Iterable]", "member" : "scala.collection.IterableOps.companion", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): Iterable[SchemaProperty[T]]", "member" : "scala.collection.IterableOps.repr", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[SchemaProperty[T]]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iterable[SchemaProperty[T]]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[SchemaProperty[T]]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[SchemaProperty[T]]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[SchemaProperty[T]]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[SchemaProperty[T], (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[SchemaProperty[T]]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[SchemaProperty[T]]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[SchemaProperty[T]]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[SchemaProperty[T], C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): b.type", "member" : "scala.collection.IterableOnceOps.addString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#addString(b:StringBuilder):b.type", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): b.type", "member" : "scala.collection.IterableOnceOps.addString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#addString(b:StringBuilder,sep:String):b.type", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): b.type", "member" : "scala.collection.IterableOnceOps.addString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#addString(b:StringBuilder,start:String,sep:String,end:String):b.type", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: (SchemaProperty[T], B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, SchemaProperty[T]) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[SchemaProperty[T], B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (SchemaProperty[T]) => B)(cmp: Ordering[B]): Option[SchemaProperty[T]]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (SchemaProperty[T]) => B)(cmp: Ordering[B]): SchemaProperty[T]", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (SchemaProperty[T]) => B)(cmp: Ordering[B]): Option[SchemaProperty[T]]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (SchemaProperty[T]) => B)(cmp: Ordering[B]): SchemaProperty[T]", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[SchemaProperty[T]]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): SchemaProperty[T]", "member" : "scala.collection.IterableOnceOps.max", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[SchemaProperty[T]]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): SchemaProperty[T]", "member" : "scala.collection.IterableOnceOps.min", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.IterableOnceOps.size", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#size:Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.isEmpty", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (SchemaProperty[T], B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, SchemaProperty[T]) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (SchemaProperty[T], B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, SchemaProperty[T]) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (SchemaProperty[T], B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, SchemaProperty[T]) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (SchemaProperty[T], B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, SchemaProperty[T]) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (SchemaProperty[T]) => Boolean): Option[SchemaProperty[T]]", "member" : "scala.collection.IterableOnceOps.find", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (SchemaProperty[T]) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (SchemaProperty[T]) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (SchemaProperty[T]) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (SchemaProperty[T]) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[SchemaProperty[T], S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperties.html", "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty", "trait" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html", "kind" : "trait", "members_trait" : [{"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: S, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#isSubsetOf(other:SchemaProperty.this.S,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[T], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "abstract def"}, {"label" : "mergeValue", "tail" : "(value: T)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#mergeValue(value:T)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "abstract def"}, {"label" : "unionMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#unionMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "abstract def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): SchemaProperty[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/SchemaProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T]", "kind" : "abstract def"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.S", "error" : "unsupported entity"}], "shortDescription" : ""}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticDependenciesProperty", "shortDescription" : "A set of dependencies between keys in an object schema extracted from aserialized JSON Schema.", "members_case class" : [{"label" : "isSubsetOf", "tail" : "(other: StaticDependenciesProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticDependenciesProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.StaticDependenciesProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticDependenciesProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: Map[String, JsonSchema[_]])(p: JsonoidParams): StaticDependenciesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticDependenciesProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#mergeValue(value:Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.StaticDependenciesProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: StaticDependenciesProperty)(p: JsonoidParams): StaticDependenciesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticDependenciesProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.StaticDependenciesProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.StaticDependenciesProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticDependenciesProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticDependenciesProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "onlyKeys", "tail" : "(keys: Set[String]): StaticDependenciesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticDependenciesProperty.onlyKeys", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#onlyKeys(keys:Set[String]):io.github.dataunitylab.jsonoid.discovery.schemas.StaticDependenciesProperty", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): StaticDependenciesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticDependenciesProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.StaticDependenciesProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticDependenciesProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.StaticDependenciesProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticDependenciesProperty#<init>", "error" : "unsupported entity"}, {"label" : "dependencies", "tail" : ": Map[String, Set[String]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticDependenciesProperty.dependencies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#dependencies:Map[String,Set[String]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[Map[String, JsonSchema[_]]], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticDependenciesProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticPatternProperty", "shortDescription" : "Represents patterns read in from a serialized JSON Schema.", "members_case class" : [{"label" : "isSubsetOf", "tail" : "(other: StaticPatternProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticPatternProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.StaticPatternProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticPatternProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: String)(p: JsonoidParams): StaticPatternProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticPatternProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#mergeValue(value:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.StaticPatternProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: StaticPatternProperty)(p: JsonoidParams): StaticPatternProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticPatternProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.StaticPatternProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.StaticPatternProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticPatternProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticPatternProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): StaticPatternProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticPatternProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.StaticPatternProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticPatternProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.StaticPatternProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticPatternProperty#<init>", "error" : "unsupported entity"}, {"label" : "regex", "tail" : ": Regex", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StaticPatternProperty.regex", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#regex:scala.util.matching.Regex", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[String], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StaticPatternProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.StatsProperty", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty$.html", "members_object" : [{"label" : "apply", "tail" : "(value: BigDecimal): StatsProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StatsProperty.apply", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty$.html#apply(value:BigDecimal):io.github.dataunitylab.jsonoid.discovery.schemas.StatsProperty", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "merge", "tail" : "(other: StatsProperty): StatsProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StatsProperty.merge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#merge(other:io.github.dataunitylab.jsonoid.discovery.schemas.StatsProperty):io.github.dataunitylab.jsonoid.discovery.schemas.StatsProperty", "kind" : "def"}, {"label" : "kurtosis", "tail" : "(): Option[BigDecimal]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StatsProperty.kurtosis", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#kurtosis:Option[BigDecimal]", "kind" : "def"}, {"label" : "skewness", "tail" : "(): Option[BigDecimal]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StatsProperty.skewness", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#skewness:Option[BigDecimal]", "kind" : "def"}, {"label" : "stdev", "tail" : "(): Option[BigDecimal]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StatsProperty.stdev", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#stdev:Option[BigDecimal]", "kind" : "def"}, {"label" : "variance", "tail" : "(): Option[BigDecimal]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StatsProperty.variance", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#variance:Option[BigDecimal]", "kind" : "def"}, {"label" : "mean", "tail" : "(): BigDecimal", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StatsProperty.mean", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#mean:BigDecimal", "kind" : "def"}, {"label" : "toJson", "tail" : "(): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StatsProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#toJson:org.json4s.JObject", "kind" : "def"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StatsProperty#<init>", "error" : "unsupported entity"}, {"label" : "m4", "tail" : ": BigDecimal", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StatsProperty.m4", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#m4:BigDecimal", "kind" : "val"}, {"label" : "m3", "tail" : ": BigDecimal", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StatsProperty.m3", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#m3:BigDecimal", "kind" : "val"}, {"label" : "m2", "tail" : ": BigDecimal", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StatsProperty.m2", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#m2:BigDecimal", "kind" : "val"}, {"label" : "m1", "tail" : ": BigDecimal", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StatsProperty.m1", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#m1:BigDecimal", "kind" : "val"}, {"label" : "totalN", "tail" : ": BigInt", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StatsProperty.totalN", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#totalN:BigInt", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StatsProperty.html", "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringBloomFilterProperty", "shortDescription" : "Tracks possible strings which can be contained in the set", "members_case class" : [{"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringBloomFilterProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: String)(p: JsonoidParams): StringBloomFilterProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringBloomFilterProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#mergeValue(value:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.StringBloomFilterProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: StringBloomFilterProperty)(p: JsonoidParams): StringBloomFilterProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringBloomFilterProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.StringBloomFilterProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.StringBloomFilterProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringBloomFilterProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "isInformational", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringBloomFilterProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#isInformational:Boolean", "kind" : "val"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): StringBloomFilterProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringBloomFilterProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.StringBloomFilterProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringBloomFilterProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.StringBloomFilterProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringBloomFilterProperty#<init>", "error" : "unsupported entity"}, {"label" : "bloomFilter", "tail" : ": BloomFilter[String]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringBloomFilterProperty.bloomFilter", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#bloomFilter:io.github.dataunitylab.jsonoid.discovery.utils.BloomFilter[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: S, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#isSubsetOf(other:SchemaProperty.this.S,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[String], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringBloomFilterProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringExamplesProperty", "shortDescription" : "Tracks examples observed for these strings.", "members_case class" : [{"label" : "mergeValue", "tail" : "(value: String)(p: JsonoidParams): StringExamplesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringExamplesProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#mergeValue(value:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.StringExamplesProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: StringExamplesProperty)(p: JsonoidParams): StringExamplesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringExamplesProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.StringExamplesProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.StringExamplesProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringExamplesProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "isInformational", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringExamplesProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#isInformational:Boolean", "kind" : "val"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): StringExamplesProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringExamplesProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.StringExamplesProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringExamplesProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.StringExamplesProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringExamplesProperty#<init>", "error" : "unsupported entity"}, {"label" : "examples", "tail" : ": ExamplesProperty[String]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringExamplesProperty.examples", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#examples:io.github.dataunitylab.jsonoid.discovery.schemas.ExamplesProperty[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: S, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#isSubsetOf(other:SchemaProperty.this.S,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[String], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringExamplesProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringHyperLogLogProperty", "shortDescription" : "Tracks the estimated cardinality of the set of string values.", "members_case class" : [{"label" : "mergeValue", "tail" : "(value: String)(p: JsonoidParams): StringHyperLogLogProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringHyperLogLogProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#mergeValue(value:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.StringHyperLogLogProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: StringHyperLogLogProperty)(p: JsonoidParams): StringHyperLogLogProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringHyperLogLogProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.StringHyperLogLogProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.StringHyperLogLogProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringHyperLogLogProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "isInformational", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringHyperLogLogProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#isInformational:Boolean", "kind" : "val"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): StringHyperLogLogProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringHyperLogLogProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.StringHyperLogLogProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringHyperLogLogProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.StringHyperLogLogProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringHyperLogLogProperty#<init>", "error" : "unsupported entity"}, {"label" : "hll", "tail" : ": HyperLogLog", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringHyperLogLogProperty.hll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#hll:io.github.dataunitylab.jsonoid.discovery.utils.HyperLogLog", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: S, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#isSubsetOf(other:SchemaProperty.this.S,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[String], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringHyperLogLogProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringLengthHistogramProperty", "shortDescription" : "Tracks a histogram of string lengths.", "members_case class" : [{"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringLengthHistogramProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: String)(p: JsonoidParams): StringLengthHistogramProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringLengthHistogramProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#mergeValue(value:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.StringLengthHistogramProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: StringLengthHistogramProperty)(p: JsonoidParams): StringLengthHistogramProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringLengthHistogramProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.StringLengthHistogramProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.StringLengthHistogramProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringLengthHistogramProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "isInformational", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringLengthHistogramProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#isInformational:Boolean", "kind" : "val"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): StringLengthHistogramProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringLengthHistogramProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.StringLengthHistogramProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringLengthHistogramProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.StringLengthHistogramProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringLengthHistogramProperty#<init>", "error" : "unsupported entity"}, {"label" : "histogram", "tail" : ": Histogram", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringLengthHistogramProperty.histogram", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#histogram:io.github.dataunitylab.jsonoid.discovery.utils.Histogram", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: S, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#isSubsetOf(other:SchemaProperty.this.S,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[String], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringLengthHistogramProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringNumericProperty", "shortDescription" : "Tracks a possible numeric schema.", "members_case class" : [{"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringNumericProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: String)(p: JsonoidParams): StringNumericProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringNumericProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#mergeValue(value:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.StringNumericProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: StringNumericProperty)(p: JsonoidParams): StringNumericProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringNumericProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.StringNumericProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.StringNumericProperty", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: StringNumericProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringNumericProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.StringNumericProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringNumericProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "isInformational", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringNumericProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#isInformational:Boolean", "kind" : "val"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): StringNumericProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringNumericProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.StringNumericProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringNumericProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.StringNumericProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringNumericProperty#<init>", "error" : "unsupported entity"}, {"label" : "failed", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringNumericProperty.failed", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#failed:Boolean", "kind" : "val"}, {"label" : "numericSchema", "tail" : ": Option[NumberSchema]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringNumericProperty.numericSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#numericSchema:Option[io.github.dataunitylab.jsonoid.discovery.schemas.NumberSchema]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[S]): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#expandTo(other:Option[SchemaProperty.this.S]):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[String], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(prop: S)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#intersectMerge(prop:SchemaProperty.this.S)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringNumericProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringSchema", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html", "members_object" : [{"label" : "SimpleProperties", "tail" : ": SchemaProperties[String]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringSchema.SimpleProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#SimpleProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[String]", "kind" : "lazy val"}, {"label" : "MinProperties", "tail" : ": SchemaProperties[String]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringSchema.MinProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#MinProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[String]", "kind" : "lazy val"}, {"label" : "AllProperties", "tail" : ": SchemaProperties[String]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringSchema.AllProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#AllProperties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[String]", "kind" : "lazy val"}, {"label" : "fromJson", "tail" : "(str: JObject): StringSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringSchema.fromJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#fromJson(str:org.json4s.JObject):io.github.dataunitylab.jsonoid.discovery.schemas.StringSchema", "kind" : "def"}, {"label" : "apply", "tail" : "(value: String)(p: JsonoidParams): StringSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringSchema.apply", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#apply(value:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.StringSchema", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "copy", "tail" : "(properties: SchemaProperties[String]): StringSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringSchema.copy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#copy(properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[String]):io.github.dataunitylab.jsonoid.discovery.schemas.StringSchema", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringSchema.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "mergeSameType", "tail" : "(mergeType: MergeType)(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringSchema.mergeSameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#mergeSameType(mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "validTypes", "tail" : ": Set[Class[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringSchema.validTypes", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#validTypes:Set[Class[_]]", "kind" : "val"}, {"label" : "schemaType", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringSchema.schemaType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#schemaType:String", "kind" : "val"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringSchema#<init>", "error" : "unsupported entity"}, {"label" : "properties", "tail" : ": SchemaProperties[String]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.StringSchema.properties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "entropy", "tail" : "(p: JsonoidParams): Option[Long]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.entropy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#entropy(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[Long]", "kind" : "def"}, {"label" : "expandTo", "tail" : "(other: Option[JsonSchema[S]]): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#expandTo[S](other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[S]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: JsonSchema[_], recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "findIncompatibilities", "tail" : "(other: JsonSchema[_], recursive: Boolean): Seq[ClassTag[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findIncompatibilities", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#findIncompatibilities(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean):Seq[scala.reflect.ClassTag[_]]", "kind" : "def"}, {"label" : "onlyPropertiesNamed", "tail" : "(props: Seq[String]): JsonSchema[String]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyPropertiesNamed", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#onlyPropertiesNamed(props:Seq[String]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "onlyProperties", "tail" : "(props: Seq[Class[_]]): JsonSchema[String]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#onlyProperties(props:Seq[Class[_]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "maxAnomalyLevel", "tail" : "(value: S, path: String)(tag: ClassTag[S], p: JsonoidParams): Option[AnomalyLevel]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.maxAnomalyLevel", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#maxAnomalyLevel[S<:org.json4s.JValue](value:S,path:String)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[io.github.dataunitylab.jsonoid.discovery.AnomalyLevel]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String, level: AnomalyLevel)(tag: ClassTag[S], p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String,level:io.github.dataunitylab.jsonoid.discovery.AnomalyLevel)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "replaceWithReference", "tail" : "(pointer: JsonPointer, reference: String, obj: Option[JsonSchema[_]])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithReference", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#replaceWithReference(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,reference:String,obj:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "replaceWithSchema", "tail" : "(pointer: JsonPointer, replaceSchema: JsonSchema[_])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#replaceWithSchema(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,replaceSchema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "findByInexactPointer", "tail" : "(pointer: JsonPointer): Seq[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findByInexactPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#findByInexactPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Seq[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "findByPointer", "tail" : "(pointer: JsonPointer): Option[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findByPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#findByPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "transformPropertiesWithInexactPath", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], transformBase: Boolean, path: String): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformPropertiesWithInexactPath", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#transformPropertiesWithInexactPath(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean,path:String):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "transformProperties", "tail" : "(transformer: PartialFunction[JsonSchema[_], JsonSchema[_]], transformBase: Boolean): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#transformProperties(transformer:PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "copyWithReset", "tail" : "()(p: JsonoidParams): JsonSchema[String]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.copyWithReset", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#copyWithReset()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "merge", "tail" : "(other: JsonSchema[_], mergeType: MergeType)(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.merge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#merge(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isMaxMin", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isMaxMin", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#isMaxMin:Boolean", "kind" : "def"}, {"label" : "createProduct", "tail" : "()(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.createProduct", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#createProduct()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "isValidType", "tail" : "(value: S): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isValidType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#isValidType[S<:org.json4s.JValue](value:S):Boolean", "kind" : "def"}, {"label" : "hasType", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.hasType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#hasType:Boolean", "kind" : "def"}, {"label" : "isNumeric", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isNumeric", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#isNumeric:Boolean", "kind" : "def"}, {"label" : "addDefinition", "tail" : "(definition: JsonSchema[_], name: String): Unit", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.addDefinition", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#addDefinition(definition:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],name:String):Unit", "kind" : "def"}, {"label" : "definitions", "tail" : ": Map[String, JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.definitions", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#definitions:scala.collection.mutable.Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "val"}, {"label" : "toJsonSchema", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJsonSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#toJsonSchema()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/StringSchema.html", "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty", "shortDescription" : "", "members_case class" : [{"label" : "expandTo", "tail" : "(other: Option[UniqueProperty]): UniqueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#expandTo(other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty]):io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: UniqueProperty, recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty,recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "mergeValue", "tail" : "(value: List[JsonSchema[_]])(p: JsonoidParams): UniqueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty.mergeValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#mergeValue(value:List[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty", "kind" : "def"}, {"label" : "unionMerge", "tail" : "(otherProp: UniqueProperty)(p: JsonoidParams): UniqueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty.unionMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#unionMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty", "kind" : "def"}, {"label" : "intersectMerge", "tail" : "(otherProp: UniqueProperty)(p: JsonoidParams): UniqueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty.intersectMerge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#intersectMerge(otherProp:io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty", "kind" : "def"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "newDefault", "tail" : "()(p: JsonoidParams): UniqueProperty", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty.newDefault", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#newDefault()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty", "kind" : "def"}, {"label" : "S", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty.S", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#S=io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty", "kind" : "type"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty#<init>", "error" : "unsupported entity"}, {"label" : "unary", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty.unary", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#unary:Boolean", "kind" : "val"}, {"label" : "unique", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.UniqueProperty.unique", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#unique:Boolean", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Boolean", "kind" : "def"}, {"label" : "transform", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], path: String): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.transform", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#transform(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):SchemaProperty.this.S", "kind" : "def"}, {"label" : "mergeOnlySameType", "tail" : "(prop: SchemaProperty[List[JsonSchema[_]]], mergeType: MergeType)(p: JsonoidParams): S", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeOnlySameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#mergeOnlySameType(prop:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty[T],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):SchemaProperty.this.S", "kind" : "def"}, {"label" : "isInformational", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.isInformational", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#isInformational:Boolean", "kind" : "def"}, {"label" : "mergeable", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperty.mergeable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#mergeable:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/UniqueProperty.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.schemas.ZeroSchema", "shortDescription" : "Represents {\"not\": {}} in JSON Schema or the schema which admits no values.", "members_case class" : [{"label" : "expandTo", "tail" : "(other: Option[JsonSchema[S]]): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ZeroSchema.expandTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#expandTo[S](other:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[S]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isSubsetOf", "tail" : "(other: JsonSchema[_], recursive: Boolean)(p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ZeroSchema.isSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#isSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "copy", "tail" : "(properties: SchemaProperties[Nothing]): ZeroSchema", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ZeroSchema.copy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#copy(properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Nothing]):io.github.dataunitylab.jsonoid.discovery.schemas.ZeroSchema", "kind" : "def"}, {"label" : "mergeSameType", "tail" : "(mergeType: MergeType)(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ZeroSchema.mergeSameType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#mergeSameType(mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "validTypes", "tail" : ": Set[Class[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ZeroSchema.validTypes", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#validTypes:Set[Class[_]]", "kind" : "val"}, {"label" : "toJson", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ZeroSchema.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#toJson()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "schemaType", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ZeroSchema.schemaType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#schemaType:String", "kind" : "val"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ZeroSchema#<init>", "error" : "unsupported entity"}, {"label" : "properties", "tail" : ": SchemaProperties[Nothing]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.ZeroSchema.properties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#properties:io.github.dataunitylab.jsonoid.discovery.schemas.SchemaProperties[Nothing]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "entropy", "tail" : "(p: JsonoidParams): Option[Long]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.entropy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#entropy(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[Long]", "kind" : "def"}, {"label" : "findIncompatibilities", "tail" : "(other: JsonSchema[_], recursive: Boolean): Seq[ClassTag[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findIncompatibilities", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#findIncompatibilities(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],recursive:Boolean):Seq[scala.reflect.ClassTag[_]]", "kind" : "def"}, {"label" : "onlyPropertiesNamed", "tail" : "(props: Seq[String]): JsonSchema[Nothing]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyPropertiesNamed", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#onlyPropertiesNamed(props:Seq[String]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "onlyProperties", "tail" : "(props: Seq[Class[_]]): JsonSchema[Nothing]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.onlyProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#onlyProperties(props:Seq[Class[_]]):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "collectAnomalies", "tail" : "(value: S, path: String)(p: JsonoidParams, tag: ClassTag[S]): Seq[Anomaly]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.collectAnomalies", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#collectAnomalies[S<:org.json4s.JValue](value:S,path:String)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams,implicittag:scala.reflect.ClassTag[S]):Seq[io.github.dataunitylab.jsonoid.discovery.Anomaly]", "kind" : "def"}, {"label" : "maxAnomalyLevel", "tail" : "(value: S, path: String)(tag: ClassTag[S], p: JsonoidParams): Option[AnomalyLevel]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.maxAnomalyLevel", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#maxAnomalyLevel[S<:org.json4s.JValue](value:S,path:String)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[io.github.dataunitylab.jsonoid.discovery.AnomalyLevel]", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: S, path: String, level: AnomalyLevel)(tag: ClassTag[S], p: JsonoidParams): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#isAnomalous[S<:org.json4s.JValue](value:S,path:String,level:io.github.dataunitylab.jsonoid.discovery.AnomalyLevel)(implicittag:scala.reflect.ClassTag[S],implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Boolean", "kind" : "def"}, {"label" : "replaceWithReference", "tail" : "(pointer: JsonPointer, reference: String, obj: Option[JsonSchema[_]])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithReference", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#replaceWithReference(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,reference:String,obj:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "replaceWithSchema", "tail" : "(pointer: JsonPointer, replaceSchema: JsonSchema[_])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.replaceWithSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#replaceWithSchema(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer,replaceSchema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "findByInexactPointer", "tail" : "(pointer: JsonPointer): Seq[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findByInexactPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#findByInexactPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Seq[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "findByPointer", "tail" : "(pointer: JsonPointer): Option[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.findByPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#findByPointer(pointer:io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer):Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "transformPropertiesWithInexactPath", "tail" : "(transformer: PartialFunction[(String, JsonSchema[_]), JsonSchema[_]], transformBase: Boolean, path: String): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformPropertiesWithInexactPath", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#transformPropertiesWithInexactPath(transformer:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean,path:String):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "transformProperties", "tail" : "(transformer: PartialFunction[JsonSchema[_], JsonSchema[_]], transformBase: Boolean): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.transformProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#transformProperties(transformer:PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],transformBase:Boolean):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "copyWithReset", "tail" : "()(p: JsonoidParams): JsonSchema[Nothing]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.copyWithReset", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#copyWithReset()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[T]", "kind" : "def"}, {"label" : "merge", "tail" : "(other: JsonSchema[_], mergeType: MergeType)(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.merge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#merge(other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],mergeType:io.github.dataunitylab.jsonoid.discovery.MergeType)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "isMaxMin", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isMaxMin", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#isMaxMin:Boolean", "kind" : "def"}, {"label" : "createProduct", "tail" : "()(p: JsonoidParams): PartialFunction[JsonSchema[_], JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.createProduct", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#createProduct()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):PartialFunction[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "isValidType", "tail" : "(value: S): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isValidType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#isValidType[S<:org.json4s.JValue](value:S):Boolean", "kind" : "def"}, {"label" : "hasType", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.hasType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#hasType:Boolean", "kind" : "def"}, {"label" : "isNumeric", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.isNumeric", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#isNumeric:Boolean", "kind" : "def"}, {"label" : "addDefinition", "tail" : "(definition: JsonSchema[_], name: String): Unit", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.addDefinition", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#addDefinition(definition:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],name:String):Unit", "kind" : "def"}, {"label" : "definitions", "tail" : ": Map[String, JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.definitions", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#definitions:scala.collection.mutable.Map[String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "val"}, {"label" : "toJsonSchema", "tail" : "()(p: JsonoidParams): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema.toJsonSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#toJsonSchema()(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):org.json4s.JObject", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/schemas\/ZeroSchema.html", "kind" : "case class"}], "io.github.dataunitylab.jsonoid.discovery.spark" : [{"name" : "io.github.dataunitylab.jsonoid.discovery.spark.JsonoidRDD", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD$.html", "members_class" : [{"label" : "treeReduceSchemas", "tail" : "(depth: Int): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.spark.JsonoidRDD.treeReduceSchemas", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html#treeReduceSchemas(depth:Int):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "reduceSchemas", "tail" : "(): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.spark.JsonoidRDD.reduceSchemas", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html#reduceSchemas():io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.spark.JsonoidRDD#<init>", "error" : "unsupported entity"}, {"label" : "rdd", "tail" : ": RDD[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.spark.JsonoidRDD.rdd", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html#rdd:org.apache.spark.rdd.RDD[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unwrapJsonoidRdd", "tail" : "(jsonoidRdd: JsonoidRDD): RDD[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.spark.JsonoidRDD.unwrapJsonoidRdd", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD$.html#unwrapJsonoidRdd(jsonoidRdd:io.github.dataunitylab.jsonoid.discovery.spark.JsonoidRDD):org.apache.spark.rdd.RDD[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "implicit def"}, {"label" : "fromStringRDD", "tail" : "(rdd: RDD[String])(p: JsonoidParams): JsonoidRDD", "member" : "io.github.dataunitylab.jsonoid.discovery.spark.JsonoidRDD.fromStringRDD", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD$.html#fromStringRDD(rdd:org.apache.spark.rdd.RDD[String])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.spark.JsonoidRDD", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidRDD.html", "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.spark.JsonoidSpark", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidSpark$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "io.github.dataunitylab.jsonoid.discovery.spark.JsonoidSpark.main", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidSpark$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "propertySetRead", "tail" : ": Read[PropertySet]", "member" : "io.github.dataunitylab.jsonoid.discovery.spark.JsonoidSpark.propertySetRead", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidSpark$.html#propertySetRead:scopt.Read[io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidSpark$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidSpark$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidSpark$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidSpark$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidSpark$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidSpark$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidSpark$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidSpark$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidSpark$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidSpark$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidSpark$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidSpark$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidSpark$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidSpark$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidSpark$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidSpark$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidSpark$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidSpark$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/spark\/JsonoidSpark$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "io.github" : [], "io" : [], "io.github.dataunitylab.jsonoid.discovery.utils" : [{"name" : "io.github.dataunitylab.jsonoid.discovery.utils.BloomFilter", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html", "members_object" : [{"label" : "deserialize", "tail" : "(bloomStr: String): BloomFilter[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.BloomFilter.deserialize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html#deserialize[T](bloomStr:String):io.github.dataunitylab.jsonoid.discovery.utils.BloomFilter[T]", "kind" : "def"}, {"label" : "FalsePositive", "tail" : ": Double", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.BloomFilter.FalsePositive", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html#FalsePositive:Double", "kind" : "val"}, {"label" : "ExpectedElements", "tail" : ": Int", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.BloomFilter.ExpectedElements", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html#ExpectedElements:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "toBase64", "tail" : "(): String", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.BloomFilter.toBase64", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html#toBase64:String", "kind" : "def"}, {"label" : "maybeSubsetOf", "tail" : "(other: BloomFilter[_]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.BloomFilter.maybeSubsetOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html#maybeSubsetOf(other:io.github.dataunitylab.jsonoid.discovery.utils.BloomFilter[_]):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(value: Array[Byte]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.BloomFilter.contains", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html#contains(value:Array[Byte]):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(value: T): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.BloomFilter.contains", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html#contains(value:T):Boolean", "kind" : "def"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.utils.BloomFilter#<init>", "error" : "unsupported entity"}, {"label" : "filter", "tail" : ": RoaringBloomFilter[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.BloomFilter.filter", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html#filter:io.github.michaelmior.bloomfilter.impl.RoaringBloomFilter[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/BloomFilter.html", "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.utils.Histogram", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram$.html", "members_object" : [{"label" : "Tolerance", "tail" : ": Double", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.Histogram.Tolerance", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram$.html#Tolerance:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "isAnomalous", "tail" : "(value: Double): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.Histogram.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#isAnomalous(value:Double):Boolean", "kind" : "def"}, {"label" : "isAnomalous", "tail" : "(value: BigInt): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.Histogram.isAnomalous", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#isAnomalous(value:BigInt):Boolean", "kind" : "def"}, {"label" : "merge", "tail" : "(value: BigDecimal): Histogram", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.Histogram.merge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#merge(value:BigDecimal):io.github.dataunitylab.jsonoid.discovery.utils.Histogram", "kind" : "def"}, {"label" : "merge", "tail" : "(value: BigInt): Histogram", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.Histogram.merge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#merge(value:BigInt):io.github.dataunitylab.jsonoid.discovery.utils.Histogram", "kind" : "def"}, {"label" : "merge", "tail" : "(value: Double): Histogram", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.Histogram.merge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#merge(value:Double):io.github.dataunitylab.jsonoid.discovery.utils.Histogram", "kind" : "def"}, {"label" : "merge", "tail" : "(other: Histogram): Histogram", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.Histogram.merge", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#merge(other:io.github.dataunitylab.jsonoid.discovery.utils.Histogram):io.github.dataunitylab.jsonoid.discovery.utils.Histogram", "kind" : "def"}, {"label" : "isTrackable", "tail" : "(value: Double): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.Histogram.isTrackable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#isTrackable(value:Double):Boolean", "kind" : "def"}, {"label" : "bins", "tail" : "(): List[(Double, Int)]", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.Histogram.bins", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#bins:List[(Double,Int)]", "kind" : "def"}, {"label" : "toJson", "tail" : "(): JObject", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.Histogram.toJson", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#toJson:org.json4s.JObject", "kind" : "def"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.utils.Histogram#<init>", "error" : "unsupported entity"}, {"label" : "hasExtremeValues", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.Histogram.hasExtremeValues", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#hasExtremeValues:Boolean", "kind" : "val"}, {"label" : "sketch", "tail" : ": DDSketch", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.Histogram.sketch", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#sketch:com.datadoghq.sketch.ddsketch.DDSketch", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/Histogram.html", "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.utils.HyperLogLog", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog$.html", "members_class" : [{"label" : "toBase64", "tail" : "(): String", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.HyperLogLog.toBase64", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog.html#toBase64:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.HyperLogLog.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog.html#toString():String", "kind" : "def"}, {"label" : "hll", "tail" : ": com.github.prasanthj.hll.HyperLogLog", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.HyperLogLog.hll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog.html#hll:com.github.prasanthj.hll.HyperLogLog", "kind" : "var"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.utils.HyperLogLog#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "DefaultRegisterIndexBits", "tail" : ": Int", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.HyperLogLog.DefaultRegisterIndexBits", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog$.html#DefaultRegisterIndexBits:Int", "kind" : "val"}, {"label" : "unwrapHLL", "tail" : "(hll: HyperLogLog): com.github.prasanthj.hll.HyperLogLog", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.HyperLogLog.unwrapHLL", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog$.html#unwrapHLL(hll:io.github.dataunitylab.jsonoid.discovery.utils.HyperLogLog):com.github.prasanthj.hll.HyperLogLog", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/HyperLogLog.html", "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer$.html", "members_object" : [{"label" : "fromString", "tail" : "(pointer: String): JsonPointer", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer.fromString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer$.html#fromString(pointer:String):io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "append", "tail" : "(part: String): JsonPointer", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer.append", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html#append(part:String):io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer.nonEmpty", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer.isEmpty", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html#toString():String", "kind" : "def"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer#<init>", "error" : "unsupported entity"}, {"label" : "isAbsolute", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer.isAbsolute", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html#isAbsolute:Boolean", "kind" : "val"}, {"label" : "parts", "tail" : ": List[String]", "member" : "io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer.parts", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html#parts:List[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/utils\/JsonPointer.html", "kind" : "object"}], "io.github.dataunitylab.jsonoid.discovery" : [{"name" : "io.github.dataunitylab.jsonoid.discovery.Anomaly", "shortDescription" : "Anomalies are potential violations of a schema according to a given value.", "members_case class" : [{"member" : "io.github.dataunitylab.jsonoid.discovery.Anomaly#<init>", "error" : "unsupported entity"}, {"label" : "anomalyLevel", "tail" : ": AnomalyLevel", "member" : "io.github.dataunitylab.jsonoid.discovery.Anomaly.anomalyLevel", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Anomaly.html#anomalyLevel:io.github.dataunitylab.jsonoid.discovery.AnomalyLevel", "kind" : "val"}, {"label" : "message", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.Anomaly.message", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Anomaly.html#message:String", "kind" : "val"}, {"label" : "path", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.Anomaly.path", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Anomaly.html#path:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Anomaly.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Anomaly.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Anomaly.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Anomaly.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Anomaly.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Anomaly.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Anomaly.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Anomaly.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Anomaly.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Anomaly.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Anomaly.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Anomaly.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Anomaly.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Anomaly.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Anomaly.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Anomaly.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Anomaly.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Anomaly.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.AnomalyLevel", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html", "members_object" : [{"label" : "Fatal", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.AnomalyLevel.Fatal", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html#Fatal", "kind" : "case object"}, {"label" : "Warning", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.AnomalyLevel.Warning", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html#Warning", "kind" : "case object"}, {"label" : "Info", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.AnomalyLevel.Info", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html#Info", "kind" : "case object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html", "kind" : "trait", "members_trait" : [{"label" : "compare", "tail" : "(that: AnomalyLevel): Int", "member" : "io.github.dataunitylab.jsonoid.discovery.AnomalyLevel.compare", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#compare(that:io.github.dataunitylab.jsonoid.discovery.AnomalyLevel):Int", "kind" : "def"}, {"label" : "compareTo", "tail" : "(that: AnomalyLevel): Int", "member" : "scala.math.Ordered.compareTo", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#compareTo(that:A):Int", "kind" : "def"}, {"label" : ">=", "tail" : "(that: AnomalyLevel): Boolean", "member" : "scala.math.Ordered.>=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#>=(that:A):Boolean", "kind" : "def"}, {"label" : "<=", "tail" : "(that: AnomalyLevel): Boolean", "member" : "scala.math.Ordered.<=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#<=(that:A):Boolean", "kind" : "def"}, {"label" : ">", "tail" : "(that: AnomalyLevel): Boolean", "member" : "scala.math.Ordered.>", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#>(that:A):Boolean", "kind" : "def"}, {"label" : "<", "tail" : "(that: AnomalyLevel): Boolean", "member" : "scala.math.Ordered.<", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#<(that:A):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "order", "tail" : ": Int", "member" : "io.github.dataunitylab.jsonoid.discovery.AnomalyLevel.order", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/AnomalyLevel.html#order:Int", "kind" : "abstract val"}], "shortDescription" : "Represents different levels of anomaly severity."}, {"name" : "io.github.dataunitylab.jsonoid.discovery.BuildInfo", "case object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/BuildInfo$.html", "shortDescription" : "This object was generated by sbt-buildinfo.", "members_case object" : [{"label" : "toString", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.BuildInfo.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/BuildInfo$.html#toString:String", "kind" : "val"}, {"label" : "version", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.BuildInfo.version", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/BuildInfo$.html#version:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/BuildInfo$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/BuildInfo$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/BuildInfo$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/BuildInfo$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/BuildInfo$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/BuildInfo$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/BuildInfo$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/BuildInfo$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/BuildInfo$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/BuildInfo$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/BuildInfo$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/BuildInfo$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/BuildInfo$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/BuildInfo$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/BuildInfo$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/BuildInfo$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/BuildInfo$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/BuildInfo$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/BuildInfo$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.DiscoverSchema", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "io.github.dataunitylab.jsonoid.discovery.DiscoverSchema.main", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "equivalenceRelationRead", "tail" : ": Read[EquivalenceRelation]", "member" : "io.github.dataunitylab.jsonoid.discovery.DiscoverSchema.equivalenceRelationRead", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#equivalenceRelationRead:scopt.Read[io.github.dataunitylab.jsonoid.discovery.EquivalenceRelation]", "kind" : "implicit val"}, {"label" : "propertySetRead", "tail" : ": Read[PropertySet]", "member" : "io.github.dataunitylab.jsonoid.discovery.DiscoverSchema.propertySetRead", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#propertySetRead:scopt.Read[io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet]", "kind" : "implicit val"}, {"label" : "transformSchema", "tail" : "(schema: JsonSchema[_], otherSchema: Option[JsonSchema[_]], addDefinitions: Boolean, detectDynamic: Boolean, detectDisjoint: Boolean)(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.DiscoverSchema.transformSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#transformSchema(schema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],otherSchema:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],addDefinitions:Boolean,detectDynamic:Boolean,detectDisjoint:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "jsonFromSource", "tail" : "(source: Source): Iterator[JValue]", "member" : "io.github.dataunitylab.jsonoid.discovery.DiscoverSchema.jsonFromSource", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#jsonFromSource(source:scala.io.Source):Iterator[org.json4s.JValue]", "kind" : "def"}, {"label" : "discoverFromValue", "tail" : "(value: JValue)(p: JsonoidParams): Option[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.DiscoverSchema.discoverFromValue", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#discoverFromValue(value:org.json4s.JValue)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "discover", "tail" : "(jsons: Iterator[JValue])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.DiscoverSchema.discover", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#discover(jsons:Iterator[org.json4s.JValue])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "splitDiscover", "tail" : "(jsons: Iterator[JValue], splitFraction: Double)(p: JsonoidParams): (JsonSchema[_], JsonSchema[_])", "member" : "io.github.dataunitylab.jsonoid.discovery.DiscoverSchema.splitDiscover", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#splitDiscover(jsons:Iterator[org.json4s.JValue],splitFraction:Double)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):(io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/DiscoverSchema$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.EquivalenceRelation", "shortDescription" : "Represents an equivalence relation between two schemas that determineswhether two schemas should be considered equivalent in the final discoveredschema.", "members_class" : [{"member" : "io.github.dataunitylab.jsonoid.discovery.EquivalenceRelation#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelation.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelation.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelation.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "fuse", "tail" : "(kind1: JsonSchema[_], kind2: JsonSchema[_]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.EquivalenceRelation.fuse", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelation.html#fuse(kind1:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],kind2:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]):Boolean", "kind" : "abstract def"}], "class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelation.html", "kind" : "class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.EquivalenceRelations", "shortDescription" : "Predefined sets of equivalence relations.", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html", "members_object" : [{"label" : "NonEquivalenceRelation", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.EquivalenceRelations.NonEquivalenceRelation", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#NonEquivalenceRelation", "kind" : "implicit object"}, {"label" : "AlwaysEquivalenceRelation", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.EquivalenceRelations.AlwaysEquivalenceRelation", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#AlwaysEquivalenceRelation", "kind" : "implicit object"}, {"label" : "KindEquivalenceRelation", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.EquivalenceRelations.KindEquivalenceRelation", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#KindEquivalenceRelation", "kind" : "implicit object"}, {"label" : "TypeMatchEquivalenceRelation", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.EquivalenceRelations.TypeMatchEquivalenceRelation", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#TypeMatchEquivalenceRelation", "kind" : "implicit object"}, {"label" : "IntersectingLabelEquivalenceRelation", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.EquivalenceRelations.IntersectingLabelEquivalenceRelation", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#IntersectingLabelEquivalenceRelation", "kind" : "implicit object"}, {"label" : "LabelEquivalenceRelation", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.EquivalenceRelations.LabelEquivalenceRelation", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#LabelEquivalenceRelation", "kind" : "implicit object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/EquivalenceRelations$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.ForeignKey", "shortDescription" : "Represents a discovered foreign key.", "members_case class" : [{"member" : "io.github.dataunitylab.jsonoid.discovery.ForeignKey#<init>", "error" : "unsupported entity"}, {"label" : "foreignPath", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.ForeignKey.foreignPath", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKey.html#foreignPath:String", "kind" : "val"}, {"label" : "localPath", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.ForeignKey.localPath", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKey.html#localPath:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKey.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKey.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKey.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKey.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKey.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKey.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKey.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKey.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKey.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKey.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKey.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKey.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKey.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKey.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKey.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKey.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKey.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKey.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.ForeignKeyFinder", "shortDescription" : "Find possible foreign keys by comparing values discovered from the schema.", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKeyFinder$.html", "members_object" : [{"label" : "findForeignKeys", "tail" : "(schema: JsonSchema[_]): List[ForeignKey]", "member" : "io.github.dataunitylab.jsonoid.discovery.ForeignKeyFinder.findForeignKeys", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKeyFinder$.html#findForeignKeys(schema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]):List[io.github.dataunitylab.jsonoid.discovery.ForeignKey]", "kind" : "def"}, {"label" : "walk", "tail" : "(schema: JsonSchema[_], extractor: PartialFunction[(String, JsonSchema[_]), BloomFilter[_]], follow: (JsonSchema[_]) => Boolean): Map[String, BloomFilter[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.SchemaWalker.walk", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKeyFinder$.html#walk(schema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],extractor:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),T],follow:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]=>Boolean):Map[String,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKeyFinder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKeyFinder$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKeyFinder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKeyFinder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKeyFinder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKeyFinder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKeyFinder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKeyFinder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKeyFinder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKeyFinder$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKeyFinder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKeyFinder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKeyFinder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKeyFinder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKeyFinder$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKeyFinder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKeyFinder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKeyFinder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ForeignKeyFinder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.Helpers", "shortDescription" : "Various helper functions used in the rest of the code.", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html", "members_object" : [{"label" : "lcm", "tail" : "(a: BigDecimal, b: BigDecimal): BigDecimal", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.lcm", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#lcm(a:BigDecimal,b:BigDecimal):BigDecimal", "kind" : "def"}, {"label" : "lcm", "tail" : "(a: BigInt, b: BigInt): BigInt", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.lcm", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#lcm(a:BigInt,b:BigInt):BigInt", "kind" : "def"}, {"label" : "gcd", "tail" : "(a: BigDecimal, b: BigDecimal): BigDecimal", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.gcd", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#gcd(a:BigDecimal,b:BigDecimal):BigDecimal", "kind" : "def"}, {"label" : "gcd", "tail" : "(a: BigInt, b: BigInt): BigInt", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.gcd", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#gcd(a:BigInt,b:BigInt):BigInt", "kind" : "def"}, {"label" : "BigDecimalOps", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.BigDecimalOps", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#BigDecimalOpsextendsAnyRef", "kind" : "implicit final class"}, {"label" : "BigIntOps", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.BigIntOps", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#BigIntOpsextendsAnyRef", "kind" : "implicit final class"}, {"label" : "AnyOptionOps", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.AnyOptionOps", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#AnyOptionOps[A]extendsAnyRef", "kind" : "implicit final class"}, {"label" : "StringOps", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.StringOps", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#StringOpsextendsAnyRef", "kind" : "implicit final class"}, {"label" : "BooleanOps", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.BooleanOps", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#BooleanOpsextendsAnyRef", "kind" : "implicit final class"}, {"label" : "AnyOps", "tail" : "", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.AnyOps", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#AnyOps[A]extendsAnyRef", "kind" : "implicit final class"}, {"label" : "findCommonPrefix", "tail" : "(str1: Option[String], str2: Option[String]): Option[String]", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.findCommonPrefix", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#findCommonPrefix(str1:Option[String],str2:Option[String]):Option[String]", "kind" : "def"}, {"label" : "findCommonPrefix", "tail" : "(str1: String, str2: String): String", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.findCommonPrefix", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#findCommonPrefix(str1:String,str2:String):String", "kind" : "def"}, {"label" : "unionOrNone", "tail" : "(first: Option[Set[A]], second: Option[Set[A]]): Option[Set[A]]", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.unionOrNone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#unionOrNone[A](first:Option[Set[A]],second:Option[Set[A]]):Option[Set[A]]", "kind" : "def"}, {"label" : "intersectOrNone", "tail" : "(first: Option[Set[A]], second: Option[Set[A]]): Option[Set[A]]", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.intersectOrNone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#intersectOrNone[A](first:Option[Set[A]],second:Option[Set[A]]):Option[Set[A]]", "kind" : "def"}, {"label" : "minOrNone", "tail" : "(first: Option[A], second: Option[A])(arg0: Order[A]): Option[A]", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.minOrNone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#minOrNone[A](first:Option[A],second:Option[A])(implicitevidence$4:scalaz.Order[A]):Option[A]", "kind" : "def"}, {"label" : "maxOrNone", "tail" : "(first: Option[A], second: Option[A])(arg0: Order[A]): Option[A]", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.maxOrNone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#maxOrNone[A](first:Option[A],second:Option[A])(implicitevidence$3:scalaz.Order[A]):Option[A]", "kind" : "def"}, {"label" : "isMaxCoveredBy", "tail" : "(value1: Option[A], exclusive1: Boolean, value2: Option[A], exclusive2: Boolean)(arg0: Order[A]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.isMaxCoveredBy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#isMaxCoveredBy[A](value1:Option[A],exclusive1:Boolean,value2:Option[A],exclusive2:Boolean)(implicitevidence$2:scalaz.Order[A]):Boolean", "kind" : "def"}, {"label" : "isMinCoveredBy", "tail" : "(value1: Option[A], exclusive1: Boolean, value2: Option[A], exclusive2: Boolean)(arg0: Order[A]): Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.isMinCoveredBy", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#isMinCoveredBy[A](value1:Option[A],exclusive1:Boolean,value2:Option[A],exclusive2:Boolean)(implicitevidence$1:scalaz.Order[A]):Boolean", "kind" : "def"}, {"label" : "factorize", "tail" : "(x: Int): List[Int]", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.factorize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#factorize(x:Int):List[Int]", "kind" : "def"}, {"label" : "contractInt", "tail" : "(current: Int, limit: Int, exclusive: Boolean, force: Boolean, round: Int): (Option[Int], Boolean)", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.contractInt", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#contractInt(current:Int,limit:Int,exclusive:Boolean,force:Boolean,round:Int):(Option[Int],Boolean)", "kind" : "def"}, {"label" : "maybeContractInt", "tail" : "(current: Option[Int], limit: Option[Int], exclusive: Boolean, force: Boolean, round: Int): (Option[Int], Boolean)", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.maybeContractInt", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#maybeContractInt(current:Option[Int],limit:Option[Int],exclusive:Boolean,force:Boolean,round:Int):(Option[Int],Boolean)", "kind" : "def"}, {"label" : "expandInt", "tail" : "(current: BigInt, limit: BigInt, exclusive: Boolean, force: Boolean, round: Int): (Option[BigInt], Boolean)", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.expandInt", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#expandInt(current:BigInt,limit:BigInt,exclusive:Boolean,force:Boolean,round:Int):(Option[BigInt],Boolean)", "kind" : "def"}, {"label" : "maybeExpandInt", "tail" : "(current: Option[BigInt], limit: Option[BigInt], exclusive: Boolean, force: Boolean, round: Int): (Option[BigInt], Boolean)", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.maybeExpandInt", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#maybeExpandInt(current:Option[BigInt],limit:Option[BigInt],exclusive:Boolean,force:Boolean,round:Int):(Option[BigInt],Boolean)", "kind" : "def"}, {"label" : "MaxExpandRounds", "tail" : ": Int", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.MaxExpandRounds", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#MaxExpandRounds:Int", "kind" : "val"}, {"label" : "pathToInexactPointer", "tail" : "(path: String): JsonPointer", "member" : "io.github.dataunitylab.jsonoid.discovery.Helpers.pathToInexactPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#pathToInexactPointer(path:String):io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Helpers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.Incompatibility", "shortDescription" : "", "members_case class" : [{"member" : "io.github.dataunitylab.jsonoid.discovery.Incompatibility#<init>", "error" : "unsupported entity"}, {"label" : "property", "tail" : ": ClassTag[T]", "member" : "io.github.dataunitylab.jsonoid.discovery.Incompatibility.property", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Incompatibility.html#property:scala.reflect.ClassTag[T]", "kind" : "val"}, {"label" : "path", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.Incompatibility.path", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Incompatibility.html#path:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Incompatibility.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Incompatibility.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Incompatibility.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Incompatibility.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Incompatibility.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Incompatibility.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Incompatibility.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Incompatibility.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Incompatibility.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Incompatibility.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Incompatibility.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Incompatibility.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Incompatibility.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Incompatibility.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Incompatibility.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Incompatibility.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Incompatibility.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Incompatibility.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.IncompatibilityCollector", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/IncompatibilityCollector$.html", "members_object" : [{"label" : "findIncompatibilities", "tail" : "(base: JsonSchema[_], other: JsonSchema[_], skipIfSubset: Boolean): Seq[Incompatibility[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.IncompatibilityCollector.findIncompatibilities", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/IncompatibilityCollector$.html#findIncompatibilities(base:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],other:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],skipIfSubset:Boolean):Seq[io.github.dataunitylab.jsonoid.discovery.Incompatibility[_]]", "kind" : "def"}, {"label" : "typeIncompat", "tail" : "(path: String, s1: JsonSchema[_], s2: JsonSchema[_], tag: ClassTag[_]): Seq[Incompatibility[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.IncompatibilityCollector.typeIncompat", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/IncompatibilityCollector$.html#typeIncompat(path:String,s1:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],s2:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],tag:scala.reflect.ClassTag[_]):Seq[io.github.dataunitylab.jsonoid.discovery.Incompatibility[_]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/IncompatibilityCollector$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/IncompatibilityCollector$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/IncompatibilityCollector$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/IncompatibilityCollector$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/IncompatibilityCollector$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/IncompatibilityCollector$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/IncompatibilityCollector$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/IncompatibilityCollector$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/IncompatibilityCollector$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/IncompatibilityCollector$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/IncompatibilityCollector$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/IncompatibilityCollector$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/IncompatibilityCollector$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/IncompatibilityCollector$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/IncompatibilityCollector$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/IncompatibilityCollector$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/IncompatibilityCollector$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/IncompatibilityCollector$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/IncompatibilityCollector$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.Intersect", "case object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Intersect$.html", "shortDescription" : "Merge schemas by taking their intersection, producing a schema that will accept the all documents accepted by both schemas.", "members_case object" : [{"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Intersect$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Intersect$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Intersect$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Intersect$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Intersect$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Intersect$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Intersect$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Intersect$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Intersect$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Intersect$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Intersect$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Intersect$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Intersect$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Intersect$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Intersect$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Intersect$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Intersect$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Intersect$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Intersect$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.JsonoidParams", "shortDescription" : "Parameters used during the discovery process.", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams$.html", "members_object" : [{"label" : "defaultJsonoidParams", "tail" : ": JsonoidParams", "member" : "io.github.dataunitylab.jsonoid.discovery.JsonoidParams.defaultJsonoidParams", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams$.html#defaultJsonoidParams:io.github.dataunitylab.jsonoid.discovery.JsonoidParams", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withResetFormatLength", "tail" : "(newResetFormatLength: Boolean): JsonoidParams", "member" : "io.github.dataunitylab.jsonoid.discovery.JsonoidParams.withResetFormatLength", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#withResetFormatLength(newResetFormatLength:Boolean):io.github.dataunitylab.jsonoid.discovery.JsonoidParams", "kind" : "def"}, {"label" : "withPropertySet", "tail" : "(newPropSet: PropertySet): JsonoidParams", "member" : "io.github.dataunitylab.jsonoid.discovery.JsonoidParams.withPropertySet", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#withPropertySet(newPropSet:io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet):io.github.dataunitylab.jsonoid.discovery.JsonoidParams", "kind" : "def"}, {"label" : "withMaxExamples", "tail" : "(newMaxExamples: Int): JsonoidParams", "member" : "io.github.dataunitylab.jsonoid.discovery.JsonoidParams.withMaxExamples", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#withMaxExamples(newMaxExamples:Int):io.github.dataunitylab.jsonoid.discovery.JsonoidParams", "kind" : "def"}, {"label" : "withFormatThreshold", "tail" : "(newFormatThreshold: Float): JsonoidParams", "member" : "io.github.dataunitylab.jsonoid.discovery.JsonoidParams.withFormatThreshold", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#withFormatThreshold(newFormatThreshold:Float):io.github.dataunitylab.jsonoid.discovery.JsonoidParams", "kind" : "def"}, {"label" : "withExtendedFormats", "tail" : "(newExtendedFormats: Boolean): JsonoidParams", "member" : "io.github.dataunitylab.jsonoid.discovery.JsonoidParams.withExtendedFormats", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#withExtendedFormats(newExtendedFormats:Boolean):io.github.dataunitylab.jsonoid.discovery.JsonoidParams", "kind" : "def"}, {"label" : "withER", "tail" : "(newER: EquivalenceRelation): JsonoidParams", "member" : "io.github.dataunitylab.jsonoid.discovery.JsonoidParams.withER", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#withER(newER:io.github.dataunitylab.jsonoid.discovery.EquivalenceRelation):io.github.dataunitylab.jsonoid.discovery.JsonoidParams", "kind" : "def"}, {"label" : "withAdditionalProperties", "tail" : "(newAdditionalProperties: Boolean): JsonoidParams", "member" : "io.github.dataunitylab.jsonoid.discovery.JsonoidParams.withAdditionalProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#withAdditionalProperties(newAdditionalProperties:Boolean):io.github.dataunitylab.jsonoid.discovery.JsonoidParams", "kind" : "def"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.JsonoidParams#<init>", "error" : "unsupported entity"}, {"label" : "resetFormatLength", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.JsonoidParams.resetFormatLength", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#resetFormatLength:Boolean", "kind" : "val"}, {"label" : "propSet", "tail" : ": PropertySet", "member" : "io.github.dataunitylab.jsonoid.discovery.JsonoidParams.propSet", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#propSet:io.github.dataunitylab.jsonoid.discovery.schemas.PropertySet", "kind" : "val"}, {"label" : "maxExamples", "tail" : ": Int", "member" : "io.github.dataunitylab.jsonoid.discovery.JsonoidParams.maxExamples", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#maxExamples:Int", "kind" : "val"}, {"label" : "formatThreshold", "tail" : ": Float", "member" : "io.github.dataunitylab.jsonoid.discovery.JsonoidParams.formatThreshold", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#formatThreshold:Float", "kind" : "val"}, {"label" : "extendedFormats", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.JsonoidParams.extendedFormats", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#extendedFormats:Boolean", "kind" : "val"}, {"label" : "er", "tail" : ": EquivalenceRelation", "member" : "io.github.dataunitylab.jsonoid.discovery.JsonoidParams.er", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#er:io.github.dataunitylab.jsonoid.discovery.EquivalenceRelation", "kind" : "val"}, {"label" : "additionalProperties", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.JsonoidParams.additionalProperties", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#additionalProperties:Boolean", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/JsonoidParams.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.MergeType", "trait" : "io\/github\/dataunitylab\/jsonoid\/discovery\/MergeType.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/MergeType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/MergeType.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/MergeType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/MergeType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/MergeType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/MergeType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/MergeType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/MergeType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/MergeType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/MergeType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/MergeType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/MergeType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/MergeType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/MergeType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/MergeType.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/MergeType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/MergeType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/MergeType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/MergeType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "The type of merge to be used when combining schemas."}, {"name" : "io.github.dataunitylab.jsonoid.discovery.PrimaryKey", "shortDescription" : "Represents a discovered primary key.", "members_case class" : [{"member" : "io.github.dataunitylab.jsonoid.discovery.PrimaryKey#<init>", "error" : "unsupported entity"}, {"label" : "path", "tail" : ": String", "member" : "io.github.dataunitylab.jsonoid.discovery.PrimaryKey.path", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKey.html#path:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKey.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKey.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKey.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKey.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKey.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKey.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKey.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKey.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKey.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKey.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKey.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKey.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKey.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKey.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKey.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKey.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKey.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKey.html", "kind" : "case class"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.PrimaryKeyFeatures", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures$.html", "members_object" : [{"label" : "LengthPenalty", "tail" : ": Int", "member" : "io.github.dataunitylab.jsonoid.discovery.PrimaryKeyFeatures.LengthPenalty", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures$.html#LengthPenalty:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "score", "tail" : "(): Double", "member" : "io.github.dataunitylab.jsonoid.discovery.PrimaryKeyFeatures.score", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html#score:Double", "kind" : "def"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.PrimaryKeyFeatures#<init>", "error" : "unsupported entity"}, {"label" : "maxLength", "tail" : ": Int", "member" : "io.github.dataunitylab.jsonoid.discovery.PrimaryKeyFeatures.maxLength", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html#maxLength:Int", "kind" : "val"}, {"label" : "idType", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.PrimaryKeyFeatures.idType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html#idType:Boolean", "kind" : "val"}, {"label" : "depth", "tail" : ": Int", "member" : "io.github.dataunitylab.jsonoid.discovery.PrimaryKeyFeatures.depth", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html#depth:Int", "kind" : "val"}, {"label" : "hasPrefixOrSuffix", "tail" : ": Boolean", "member" : "io.github.dataunitylab.jsonoid.discovery.PrimaryKeyFeatures.hasPrefixOrSuffix", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html#hasPrefixOrSuffix:Boolean", "kind" : "val"}, {"label" : "maxCount", "tail" : ": Double", "member" : "io.github.dataunitylab.jsonoid.discovery.PrimaryKeyFeatures.maxCount", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html#maxCount:Double", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFeatures.html", "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.PrimaryKeyFinder", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html", "members_object" : [{"label" : "findPrimaryKeys", "tail" : "(schema: JsonSchema[_]): List[PrimaryKey]", "member" : "io.github.dataunitylab.jsonoid.discovery.PrimaryKeyFinder.findPrimaryKeys", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html#findPrimaryKeys(schema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]):List[io.github.dataunitylab.jsonoid.discovery.PrimaryKey]", "kind" : "def"}, {"label" : "prefixOrSuffix", "tail" : ": List[String]", "member" : "io.github.dataunitylab.jsonoid.discovery.PrimaryKeyFinder.prefixOrSuffix", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html#prefixOrSuffix:List[String]", "kind" : "val"}, {"label" : "walk", "tail" : "(schema: JsonSchema[_], extractor: PartialFunction[(String, JsonSchema[_]), PrimaryKeyFeatures], follow: (JsonSchema[_]) => Boolean): Map[String, PrimaryKeyFeatures]", "member" : "io.github.dataunitylab.jsonoid.discovery.SchemaWalker.walk", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html#walk(schema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],extractor:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),T],follow:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]=>Boolean):Map[String,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/PrimaryKeyFinder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.ReferenceResolver", "shortDescription" : "Resolve references in a schema by annotating all references with the schemathat is being referenced.", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ReferenceResolver$.html", "members_object" : [{"label" : "transformSchema", "tail" : "(schema: JsonSchema[_])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.ReferenceResolver.transformSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ReferenceResolver$.html#transformSchema(schema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "walk", "tail" : "(schema: JsonSchema[_], extractor: PartialFunction[(String, JsonSchema[_]), Unit], follow: (JsonSchema[_]) => Boolean): Map[String, Unit]", "member" : "io.github.dataunitylab.jsonoid.discovery.SchemaWalker.walk", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ReferenceResolver$.html#walk(schema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],extractor:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),T],follow:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]=>Boolean):Map[String,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ReferenceResolver$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ReferenceResolver$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ReferenceResolver$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ReferenceResolver$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ReferenceResolver$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ReferenceResolver$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ReferenceResolver$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ReferenceResolver$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ReferenceResolver$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ReferenceResolver$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ReferenceResolver$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ReferenceResolver$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ReferenceResolver$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ReferenceResolver$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ReferenceResolver$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ReferenceResolver$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ReferenceResolver$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ReferenceResolver$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ReferenceResolver$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.SchemaWalker", "trait" : "io\/github\/dataunitylab\/jsonoid\/discovery\/SchemaWalker.html", "kind" : "trait", "members_trait" : [{"label" : "walk", "tail" : "(schema: JsonSchema[_], extractor: PartialFunction[(String, JsonSchema[_]), T], follow: (JsonSchema[_]) => Boolean): Map[String, T]", "member" : "io.github.dataunitylab.jsonoid.discovery.SchemaWalker.walk", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/SchemaWalker.html#walk(schema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],extractor:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),T],follow:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]=>Boolean):Map[String,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/SchemaWalker.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/SchemaWalker.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/SchemaWalker.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/SchemaWalker.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/SchemaWalker.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/SchemaWalker.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/SchemaWalker.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/SchemaWalker.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/SchemaWalker.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/SchemaWalker.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/SchemaWalker.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/SchemaWalker.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/SchemaWalker.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/SchemaWalker.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/SchemaWalker.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/SchemaWalker.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/SchemaWalker.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/SchemaWalker.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/SchemaWalker.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A helper trait for any class that needs to walk a schema and build a mapof values collected from the properties."}, {"name" : "io.github.dataunitylab.jsonoid.discovery.TypeDetector", "shortDescription" : "Provides the ability to detect the schema type of a serialized JSON Schema object without type based on other available properties.", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html", "members_object" : [{"label" : "detectAllTypes", "tail" : "(properties: Map[String, JValue]): List[String]", "member" : "io.github.dataunitylab.jsonoid.discovery.TypeDetector.detectAllTypes", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html#detectAllTypes(properties:Map[String,org.json4s.JValue]):List[String]", "kind" : "def"}, {"label" : "detectType", "tail" : "(properties: Map[String, JValue]): Option[String]", "member" : "io.github.dataunitylab.jsonoid.discovery.TypeDetector.detectType", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html#detectType(properties:Map[String,org.json4s.JValue]):Option[String]", "kind" : "def"}, {"label" : "propertyTypes", "tail" : ": Map[String, Set[String]]", "member" : "io.github.dataunitylab.jsonoid.discovery.TypeDetector.propertyTypes", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html#propertyTypes:Map[String,Set[String]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/TypeDetector$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.Union", "case object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Union$.html", "shortDescription" : "Merge schemas by taking their union, producing a schema that will accept the all documents accepted by either schema.", "members_case object" : [{"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Union$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Union$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Union$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Union$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Union$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Union$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Union$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Union$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Union$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Union$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Union$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Union$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Union$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Union$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Union$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Union$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Union$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Union$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/Union$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.ValueTableGenerator", "shortDescription" : "Allow writing all values observed at a particular path to a CSV file.", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ValueTableGenerator$.html", "members_object" : [{"label" : "writeValueTable", "tail" : "(schema: JsonSchema[_], output: OutputStream): Unit", "member" : "io.github.dataunitylab.jsonoid.discovery.ValueTableGenerator.writeValueTable", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ValueTableGenerator$.html#writeValueTable(schema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],output:java.io.OutputStream):Unit", "kind" : "def"}, {"label" : "walk", "tail" : "(schema: JsonSchema[_], extractor: PartialFunction[(String, JsonSchema[_]), List[String]], follow: (JsonSchema[_]) => Boolean): Map[String, List[String]]", "member" : "io.github.dataunitylab.jsonoid.discovery.SchemaWalker.walk", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ValueTableGenerator$.html#walk(schema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],extractor:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),T],follow:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]=>Boolean):Map[String,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ValueTableGenerator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ValueTableGenerator$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ValueTableGenerator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ValueTableGenerator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ValueTableGenerator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ValueTableGenerator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ValueTableGenerator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ValueTableGenerator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ValueTableGenerator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ValueTableGenerator$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ValueTableGenerator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ValueTableGenerator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ValueTableGenerator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ValueTableGenerator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ValueTableGenerator$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ValueTableGenerator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ValueTableGenerator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ValueTableGenerator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/ValueTableGenerator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "io.github.dataunitylab.jsonoid.discovery.transformers" : [{"name" : "io.github.dataunitylab.jsonoid.discovery.transformers.DefinitionTransformer", "shortDescription" : "Use fuzzy set similarity to transform a schema by creating definitions thatcapture repeated structures within the schema.", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html", "members_object" : [{"label" : "findClusters", "tail" : "(schema: JsonSchema[_]): Set[Set[String]]", "member" : "io.github.dataunitylab.jsonoid.discovery.transformers.DefinitionTransformer.findClusters", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html#findClusters(schema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]):Set[Set[String]]", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: JsonSchema[_], addObject: Boolean)(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.transformers.DefinitionTransformer.transformSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html#transformSchema(schema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],addObject:Boolean)(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "pathToPointer", "tail" : "(path: String): JsonPointer", "member" : "io.github.dataunitylab.jsonoid.discovery.transformers.DefinitionTransformer.pathToPointer", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html#pathToPointer(path:String):io.github.dataunitylab.jsonoid.discovery.utils.JsonPointer", "kind" : "def"}, {"label" : "walk", "tail" : "(schema: JsonSchema[_], extractor: PartialFunction[(String, JsonSchema[_]), FuzzySet[String]], follow: (JsonSchema[_]) => Boolean): Map[String, FuzzySet[String]]", "member" : "io.github.dataunitylab.jsonoid.discovery.SchemaWalker.walk", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html#walk(schema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],extractor:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),T],follow:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]=>Boolean):Map[String,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DefinitionTransformer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.transformers.DisjointObjectTransformer", "shortDescription" : "Transforms objects schemas with disjoint keys into products", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DisjointObjectTransformer$.html", "members_object" : [{"label" : "transformSchema", "tail" : "(schema: JsonSchema[_])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.transformers.DisjointObjectTransformer.transformSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DisjointObjectTransformer$.html#transformSchema(schema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "walk", "tail" : "(schema: JsonSchema[_], extractor: PartialFunction[(String, JsonSchema[_]), (Seq[Set[String]], ObjectSchema)], follow: (JsonSchema[_]) => Boolean): Map[String, (Seq[Set[String]], ObjectSchema)]", "member" : "io.github.dataunitylab.jsonoid.discovery.SchemaWalker.walk", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DisjointObjectTransformer$.html#walk(schema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],extractor:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),T],follow:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]=>Boolean):Map[String,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DisjointObjectTransformer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DisjointObjectTransformer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DisjointObjectTransformer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DisjointObjectTransformer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DisjointObjectTransformer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DisjointObjectTransformer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DisjointObjectTransformer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DisjointObjectTransformer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DisjointObjectTransformer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DisjointObjectTransformer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DisjointObjectTransformer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DisjointObjectTransformer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DisjointObjectTransformer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DisjointObjectTransformer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DisjointObjectTransformer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DisjointObjectTransformer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DisjointObjectTransformer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DisjointObjectTransformer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DisjointObjectTransformer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.transformers.DynamicObjectTransformer", "shortDescription" : "Use entropy calculations to detect objects with dynamic keys", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DynamicObjectTransformer$.html", "members_object" : [{"label" : "transformSchema", "tail" : "(schema: JsonSchema[_])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.transformers.DynamicObjectTransformer.transformSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DynamicObjectTransformer$.html#transformSchema(schema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "walk", "tail" : "(schema: JsonSchema[_], extractor: PartialFunction[(String, JsonSchema[_]), ObjectSchema], follow: (JsonSchema[_]) => Boolean): Map[String, ObjectSchema]", "member" : "io.github.dataunitylab.jsonoid.discovery.SchemaWalker.walk", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DynamicObjectTransformer$.html#walk(schema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],extractor:PartialFunction[(String,io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]),T],follow:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]=>Boolean):Map[String,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DynamicObjectTransformer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DynamicObjectTransformer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DynamicObjectTransformer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DynamicObjectTransformer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DynamicObjectTransformer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DynamicObjectTransformer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DynamicObjectTransformer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DynamicObjectTransformer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DynamicObjectTransformer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DynamicObjectTransformer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DynamicObjectTransformer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DynamicObjectTransformer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DynamicObjectTransformer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DynamicObjectTransformer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DynamicObjectTransformer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DynamicObjectTransformer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DynamicObjectTransformer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DynamicObjectTransformer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/DynamicObjectTransformer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.transformers.EnumTransformer", "shortDescription" : "", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html", "members_object" : [{"label" : "transformSchema", "tail" : "(schema: JsonSchema[_], otherSchema: Option[JsonSchema[_]])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.transformers.EnumTransformer.transformSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html#transformSchema(schema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],otherSchema:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "getFromOther", "tail" : "(schema: JsonSchema[_], maybeOtherSchema: Option[JsonSchema[_]], path: String): Seq[JsonSchema[_]]", "member" : "io.github.dataunitylab.jsonoid.discovery.transformers.EnumTransformer.getFromOther", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html#getFromOther(schema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_],maybeOtherSchema:Option[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]],path:String):Seq[io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]]", "kind" : "def"}, {"label" : "MaxValues", "tail" : ": Int", "member" : "io.github.dataunitylab.jsonoid.discovery.transformers.EnumTransformer.MaxValues", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html#MaxValues:Int", "kind" : "val"}, {"label" : "EnumRatio", "tail" : ": Int", "member" : "io.github.dataunitylab.jsonoid.discovery.transformers.EnumTransformer.EnumRatio", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html#EnumRatio:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/EnumTransformer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.transformers.MergeAllOfTransformer", "shortDescription" : "Combine multiple instances of allOf into a single schema.", "object" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/MergeAllOfTransformer$.html", "members_object" : [{"label" : "transformSchema", "tail" : "(schema: JsonSchema[_])(p: JsonoidParams): JsonSchema[_]", "member" : "io.github.dataunitylab.jsonoid.discovery.transformers.MergeAllOfTransformer.transformSchema", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/MergeAllOfTransformer$.html#transformSchema(schema:io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_])(implicitp:io.github.dataunitylab.jsonoid.discovery.JsonoidParams):io.github.dataunitylab.jsonoid.discovery.schemas.JsonSchema[_]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/MergeAllOfTransformer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/MergeAllOfTransformer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/MergeAllOfTransformer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/MergeAllOfTransformer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/MergeAllOfTransformer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/MergeAllOfTransformer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/MergeAllOfTransformer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/MergeAllOfTransformer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/MergeAllOfTransformer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/MergeAllOfTransformer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/MergeAllOfTransformer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/MergeAllOfTransformer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/MergeAllOfTransformer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/MergeAllOfTransformer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/MergeAllOfTransformer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/MergeAllOfTransformer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/MergeAllOfTransformer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/MergeAllOfTransformer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/MergeAllOfTransformer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.dataunitylab.jsonoid.discovery.transformers.SimilarityMetric", "shortDescription" : "Used to calculate similarity fuzzy sets located at two paths.", "members_case class" : [{"label" : "calculateDistance", "tail" : "(path1: String, path2: String): Double", "member" : "io.github.dataunitylab.jsonoid.discovery.transformers.SimilarityMetric.calculateDistance", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/SimilarityMetric.html#calculateDistance(path1:String,path2:String):Double", "kind" : "def"}, {"member" : "io.github.dataunitylab.jsonoid.discovery.transformers.SimilarityMetric#<init>", "error" : "unsupported entity"}, {"label" : "fuzzySets", "tail" : ": Map[String, FuzzySet[String]]", "member" : "io.github.dataunitylab.jsonoid.discovery.transformers.SimilarityMetric.fuzzySets", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/SimilarityMetric.html#fuzzySets:Map[String,io.github.dataunitylab.fuzzysets.FuzzySet[String]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/SimilarityMetric.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/SimilarityMetric.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/SimilarityMetric.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/SimilarityMetric.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/SimilarityMetric.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/SimilarityMetric.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/SimilarityMetric.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/SimilarityMetric.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/SimilarityMetric.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/SimilarityMetric.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/SimilarityMetric.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/SimilarityMetric.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/SimilarityMetric.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/SimilarityMetric.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/SimilarityMetric.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/SimilarityMetric.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/SimilarityMetric.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/github\/dataunitylab\/jsonoid\/discovery\/transformers\/SimilarityMetric.html", "kind" : "case class"}]};